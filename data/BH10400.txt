 BH10400: proc (ParmPtr) options (main); /* Batch version */            
 %include zm2EnvB;                                                      
                                                                        
 dcl Copyright char (30) static init ('Copyright KMD A/S 2021');        
 /*-------------------------------------------------------------------- 
                                                                        
    Modulnavn       : BH10400                                           
                                                                        
    Beskrivelse     : Hvis andel i en given periode overstiger 100%     
                      skal ejere udskrives på liste                     
                                                                        
    Kald:           :                                                   
                                                                        
    Programmør      : Z6JJJ                                             
                                                                        
    Dato            : 03.03.2023                                        
                                                                        
    Rettelser       :                                                   
                                                                        
 --------------------------------------------------------------------*/ 
    zm2Appl    = 'BEVS';                                                
    zm2Program = 'BH10400';                                             
                                                                        
 /*-------------------------------------------------------------------- 
    Includes                                                            
 --------------------------------------------------------------------*/ 
    %include zm2dcla;        // Standard-erklæringer                    
    %include zm2bata;        // Standard-rutiner og DUALPLI opsæt       
    %include zm2prna;        // Fejl og andre lister                    
    %include zm2para;        // Parameter indlæsning                    
    %include zm20102m;       // Today                                   
                                                                        
 /*-------------------------------------------------------------------- 
    Declare af kommunikationsareal                                      
 --------------------------------------------------------------------*/ 
 dcl  ParmPtr    pointer;                                               
 dcl  1 Parm based(ParmPtr),                                            
        %include zm2skeln;                                              
                                                                        
 /*-------------------------------------------------------------------- 
    Database                                                            
 --------------------------------------------------------------------*/ 
    exec sql include BQ76000T;     /* Erklæring af tabel              */
    exec sql include BQ77000T;     /* Erklæring af tabel              */
    exec sql include BQ78000T;     /* Erklæring af tabel              */
    %include zm2db2b;              /* Standard til zm2-programmer     */
                                                                        
 /*-------------------------------------------------------------------- 
    Øvrige declares                                                     
 --------------------------------------------------------------------*/ 
 dcl  (addr, null, stg, index, low, substr, cstg) builtin;              
                                                                        
 dcl  FeltStart    bin fixed (31) init (0);                             
 dcl  FeltTab      bin fixed (31) init (0);                             
 dcl  FeltLgd      bin fixed (31) init (0);                             
 dcl  Felt         char (60);                                           
 dcl  FeltParm     char (60);                                           
                                                                        
 // Parametre                                                           
 dcl  EVS_AAR   char (4);                                               
 dcl  DataId    char (4);                                               
 dcl  hj_evsaar bin fixed (15);                                         
 dcl  hj_dataid bin fixed (15);                                         
                                                                        
 // Behandling af cor filer                                             
 dcl BH104AO file record output;                                        
 dcl BH104BO file record output;                                        
 dcl 1 udskriv_tab,                                                     
      2 ekomnr       char (4),                                          
      2 buf1         char (1),                                          
      2 eejdnr       char (8),                                          
      2 buf2         char (1),                                          
      2 dcprnr       char (10),                                         
      2 buf3         char (1),                                          
      2 gpctejer     char (6),                                          
      2 buf4         char (1),                                          
      2 cejform      char (2),                                          
      2 buf5         char (1),                                          
      2 afstaa       char (8),                                          
      2 buf6         char (1),                                          
      2 dovtg        char (8),                                          
      2 buf7         char (1),                                          
      2 eenhedlbnr   char (4),                                          
      2 buf8         char (1),                                          
      2 fejlnr       char (4),                                          
      2 buf9         char (1),                                          
      2 cejbevs      char (1),                                          
      2 buf10        char (1),                                          
      2 cdatafra     char (1);                                          
                                                                        
  dcl 1 udskrives_tab(150),                                             
      2 fundet       char (1);                                          
  dcl 1 indgaar_tab(150),                                               
      2 fundet       char (1);                                          
                                                                        
 // Antal                                                               
 dcl  indA_rec     bin fixed (31) init (0);                             
 dcl  indB_rec     bin fixed (31) init (0);                             
 dcl  ud_write104A bin fixed (31) init (0);                             
 dcl  ud_write104B bin fixed (31) init (0);                             
 // Summer                                                              
 dcl ejerpct0hus   dec fixed (5,2) init (0);                            
 dcl ejerpct1hus   dec fixed (5,2) init (0);                            
 dcl ejerpct2hus   dec fixed (5,2) init (0);                            
 dcl ejerpct3hus   dec fixed (5,2) init (0);                            
 dcl ejerpct4hus   dec fixed (5,2) init (0);                            
                                                                        
 dcl 1 eenhed0_tab(150),                                                
      2 ekomnr       bin fixed (15),                                    
      2 eejdnr       bin fixed (31),                                    
      2 dcprnr       dec fixed (11,0),                                  
      2 gpctejer     dec fixed (5,2),                                   
      2 cejform      char (2),                                          
      2 afstaa       dec fixed (9,0),                                   
      2 dovtg        dec fixed (9,0),                                   
      2 eenhedlbnr   bin fixed (15),                                    
      2 fejlnr       bin fixed (15),                                    
      2 cdatafra     char (1),                                          
      2 cejbevs      char (1),                                          
      2 udskriv      char (1);                                          
 dcl 1 eenhed1_tab(150),                                                
      2 ekomnr       bin fixed (15),                                    
      2 eejdnr       bin fixed (31),                                    
      2 dcprnr       dec fixed (11,0),                                  
      2 gpctejer     dec fixed (5,2),                                   
      2 cejform      char (2),                                          
      2 afstaa       dec fixed (9,0),                                   
      2 dovtg        dec fixed (9,0),                                   
      2 eenhedlbnr   bin fixed (15),                                    
      2 fejlnr       bin fixed (15),                                    
      2 cdatafra     char (1),                                          
      2 cejbevs      char (1),                                          
      2 udskriv      char (1);                                          
 dcl 1 eenhed2_tab(150),                                                
      2 ekomnr       bin fixed (15),                                    
      2 eejdnr       bin fixed (31),                                    
      2 dcprnr       dec fixed (11,0),                                  
      2 gpctejer     dec fixed (5,2),                                   
      2 cejform      char (2),                                          
      2 afstaa       dec fixed (9,0),                                   
      2 dovtg        dec fixed (9,0),                                   
      2 eenhedlbnr   bin fixed (15),                                    
      2 fejlnr       bin fixed (15),                                    
      2 cdatafra     char (1),                                          
      2 cejbevs      char (1),                                          
      2 udskriv      char (1);                                          
 dcl 1 eenhed3_tab(150),                                                
      2 ekomnr       bin fixed (15),                                    
      2 eejdnr       bin fixed (31),                                    
      2 dcprnr       dec fixed (11,0),                                  
      2 gpctejer     dec fixed (5,2),                                   
      2 cejform      char (2),                                          
      2 afstaa       dec fixed (9,0),                                   
      2 dovtg        dec fixed (9,0),                                   
      2 eenhedlbnr   bin fixed (15),                                    
      2 fejlnr       bin fixed (15),                                    
      2 cdatafra     char (1),                                          
      2 cejbevs      char (1),                                          
      2 udskriv      char (1);                                          
 dcl 1 eenhed4_tab(150),                                                
      2 ekomnr       bin fixed (15),                                    
      2 eejdnr       bin fixed (31),                                    
      2 dcprnr       dec fixed (11,0),                                  
      2 gpctejer     dec fixed (5,2),                                   
      2 cejform      char (2),                                          
      2 afstaa       dec fixed (9,0),                                   
      2 dovtg        dec fixed (9,0),                                   
      2 eenhedlbnr   bin fixed (15),                                    
      2 fejlnr       bin fixed (15),                                    
      2 cdatafra     char (1),                                          
      2 cejbevs      char (1),                                          
      2 udskriv      char (1);                                          
                                                                        
 dcl ja              BIT (1)     INIT ('1'B);                           
 dcl nej             BIT (1)     INIT ('0'B);                           
 dcl Result_A_Fundet BIT (1)     INIT ('1'B);                           
 dcl Result_B_Fundet BIT (1)     INIT ('1'B);                           
 dcl dovtg           bin fixed (31);                                    
 dcl dafst           bin fixed (31);                                    
 /*-------------------------------------------------------------------- 
        ON CONDITIONS                                                   
 --------------------------------------------------------------------*/ 
         PUT SKIP LIST ('START ' !! zm2Program);                        
                                                                        
         ON ERROR                                                       
            BEGIN;                                                      
                ON ERROR SYSTEM;                                        
                PUT SKIP LIST ('PROGRAMFEJL');                          
                PUT SKIP LIST ('EKOMNR:', DCLBQ78000T.EKOMNR);          
                PUT SKIP LIST ('EEJDNR:', DCLBQ78000T.EEJDNR);          
                PUT SKIP LIST ('DCPRNR:', DCLBQ78000T.DCPRN);           
                CALL PLIDUMP  ('SNHOB','PROGRAM BH10400L');             
            END;                                                        
 /*-------------------------------------------------------------------- 
    Hovedprogram                                                        
 --------------------------------------------------------------------*/ 
                                                                        
    call Initier;                                                       
    CALL OPEN_CSR('A');                                                 
    CALL FETCH_CSR('A');  /* BQ78 */                                    
                                                                        
    DO WHILE (RESULT_A_FUNDET);                                         
       CALL BEHANDL;                                                    
       CALL FETCH_CSR('A');  /* BQ78 */                                 
    END;                                                                
                                                                        
    CALL CLOSE_CSR('A');                                                
    call Afslut;                                                        
                                                                        
    return;                                                             
                                                                        
 /*-------------------------------------------------------------------- 
    Behandl                                                             
    For hver ejendom findes ejere                                       
 --------------------------------------------------------------------*/ 
 Behandl: proc;                                                         
                                                                        
    dcl i0 bin fixed(31) init(0);                                       
    dcl i1 bin fixed(31) init(0);                                       
    dcl i2 bin fixed(31) init(0);                                       
    dcl i3 bin fixed(31) init(0);                                       
    dcl i4 bin fixed(31) init(0);                                       
    eenhed0_tab(*) = '';                                                
    eenhed1_tab(*) = '';                                                
    eenhed2_tab(*) = '';                                                
    eenhed3_tab(*) = '';                                                
    eenhed4_tab(*) = '';                                                
                                                                        
    CALL OPEN_CSR('B');                                                 
    CALL FETCH_CSR('B');                                                
                                                                        
    DO WHILE (RESULT_B_FUNDET);                                         
       select (DCLBQ78000T.EENHEDLBNR);                                 
        when (0)                                                        
          do;                                                           
           i0 += 1;                                                     
           eenhed0_tab.ekomnr(i0)     = DCLBQ78000T.EKOMNR;             
           eenhed0_tab.eejdnr(i0)     = DCLBQ78000T.EEJDNR;             
           eenhed0_tab.dcprnr(i0)     = DCLBQ78000T.DCPRN;              
           eenhed0_tab.gpctejer(i0)   = DCLBQ78000T.TILEVS_GPCTEJER;    
           eenhed0_tab.cejform(i0)    = DCLBQ78000T.TILEVS_A_EJ_CEJFORH;
           eenhed0_tab.afstaa(i0)     = DCLBQ78000T.TILEVS_DAFSTAA;     
           eenhed0_tab.dovtg(i0)      = DCLBQ78000T.TILEVS_DOVTG;       
           eenhed0_tab.eenhedlbnr(i0) = DCLBQ78000T.EENHEDLBNR;         
           eenhed0_tab.fejlnr(i0)     = DCLBQ78000T.FEJLNR;             
           eenhed0_tab.cdatafra(i0)   = DCLBQ78000T.TILEVS_CDATAFRA;    
           eenhed0_tab.cejbevs(i0)    = DCLBQ78000T.TILEVS_CEJBEVS;     
          end;                                                          
        when (1)                                                        
          do;                                                           
           i1 += 1;                                                     
           eenhed1_tab.ekomnr(i1)     = DCLBQ78000T.EKOMNR;             
           eenhed1_tab.eejdnr(i1)     = DCLBQ78000T.EEJDNR;             
           eenhed1_tab.dcprnr(i1)     = DCLBQ78000T.DCPRN;              
           eenhed1_tab.gpctejer(i1)   = DCLBQ78000T.TILEVS_GPCTEJER;    
           eenhed1_tab.cejform(i1)    = DCLBQ78000T.TILEVS_A_EJ_CEJFORH;
           eenhed1_tab.afstaa(i1)     = DCLBQ78000T.TILEVS_DAFSTAA;     
           eenhed1_tab.dovtg(i1)      = DCLBQ78000T.TILEVS_DOVTG;       
           eenhed1_tab.eenhedlbnr(i1) = DCLBQ78000T.EENHEDLBNR;         
           eenhed1_tab.fejlnr(i1)     = DCLBQ78000T.FEJLNR;             
           eenhed1_tab.cdatafra(i1)   = DCLBQ78000T.TILEVS_CDATAFRA;    
           eenhed1_tab.cejbevs(i1)    = DCLBQ78000T.TILEVS_CEJBEVS;     
          end;                                                          
        when (2)                                                        
          do;                                                           
           i2 += 1;                                                     
           eenhed2_tab.ekomnr(i2)     = DCLBQ78000T.EKOMNR;             
           eenhed2_tab.eejdnr(i2)     = DCLBQ78000T.EEJDNR;             
           eenhed2_tab.dcprnr(i2)     = DCLBQ78000T.DCPRN;              
           eenhed2_tab.gpctejer(i2)   = DCLBQ78000T.TILEVS_GPCTEJER;    
           eenhed2_tab.cejform(i2)    = DCLBQ78000T.TILEVS_A_EJ_CEJFORH;
           eenhed2_tab.afstaa(i2)     = DCLBQ78000T.TILEVS_DAFSTAA;     
           eenhed2_tab.dovtg(i2)      = DCLBQ78000T.TILEVS_DOVTG;       
           eenhed2_tab.eenhedlbnr(i2) = DCLBQ78000T.EENHEDLBNR;         
           eenhed2_tab.fejlnr(i2)     = DCLBQ78000T.FEJLNR;             
           eenhed2_tab.cdatafra(i2)   = DCLBQ78000T.TILEVS_CDATAFRA;    
           eenhed2_tab.cejbevs(i2)    = DCLBQ78000T.TILEVS_CEJBEVS;     
          end;                                                          
        when (3)                                                        
          do;                                                           
           i3 += 1;                                                     
           eenhed3_tab.ekomnr(i3)     = DCLBQ78000T.EKOMNR;             
           eenhed3_tab.eejdnr(i3)     = DCLBQ78000T.EEJDNR;             
           eenhed3_tab.dcprnr(i3)     = DCLBQ78000T.DCPRN;              
           eenhed3_tab.gpctejer(i3)   = DCLBQ78000T.TILEVS_GPCTEJER;    
           eenhed3_tab.cejform(i3)    = DCLBQ78000T.TILEVS_A_EJ_CEJFORH;
           eenhed3_tab.afstaa(i3)     = DCLBQ78000T.TILEVS_DAFSTAA;     
           eenhed3_tab.dovtg(i3)      = DCLBQ78000T.TILEVS_DOVTG;       
           eenhed3_tab.eenhedlbnr(i3) = DCLBQ78000T.EENHEDLBNR;         
           eenhed3_tab.fejlnr(i3)     = DCLBQ78000T.FEJLNR;             
           eenhed3_tab.cdatafra(i3)   = DCLBQ78000T.TILEVS_CDATAFRA;    
           eenhed3_tab.cejbevs(i3)    = DCLBQ78000T.TILEVS_CEJBEVS;     
          end;                                                          
        when (4)                                                        
          do;                                                           
           i4 += 1;                                                     
           eenhed4_tab.ekomnr(i4)     = DCLBQ78000T.EKOMNR;             
           eenhed4_tab.eejdnr(i4)     = DCLBQ78000T.EEJDNR;             
           eenhed4_tab.dcprnr(i4)     = DCLBQ78000T.DCPRN;              
           eenhed4_tab.gpctejer(i4)   = DCLBQ78000T.TILEVS_GPCTEJER;    
           eenhed4_tab.cejform(i4)    = DCLBQ78000T.TILEVS_A_EJ_CEJFORH;
           eenhed4_tab.afstaa(i4)     = DCLBQ78000T.TILEVS_DAFSTAA;     
           eenhed4_tab.dovtg(i4)      = DCLBQ78000T.TILEVS_DOVTG;       
           eenhed4_tab.eenhedlbnr(i4) = DCLBQ78000T.EENHEDLBNR;         
           eenhed4_tab.fejlnr(i4)     = DCLBQ78000T.FEJLNR;             
           eenhed4_tab.cdatafra(i4)   = DCLBQ78000T.TILEVS_CDATAFRA;    
           eenhed4_tab.cejbevs(i4)    = DCLBQ78000T.TILEVS_CEJBEVS;     
          end;                                                          
       end;                                                             
                                                                        
       CALL FETCH_CSR('B');  /* BQ78 */                                 
    END;                                                                
                                                                        
    CALL CLOSE_CSR('B');                                                
                                                                        
    if eenhed0_tab.ekomnr(1) > 0 then                                   
      CALL BEHANDLING0;                                                 
    if eenhed1_tab.ekomnr(1) > 0 then                                   
      CALL BEHANDLING1;                                                 
    if eenhed2_tab.ekomnr(1) > 0 then                                   
      CALL BEHANDLING2;                                                 
    if eenhed3_tab.ekomnr(1) > 0 then                                   
      CALL BEHANDLING3;                                                 
    if eenhed4_tab.ekomnr(1) > 0 then                                   
      CALL BEHANDLING4;                                                 
                                                                        
 end Behandl;                                                           
                                                                        
 /*-------------------------------------------------------------------- 
    Behandling af EENHEDLBNR = 0                                        
    Opdeles i diverse procedurer/funktioner med hvert sit formål        
 --------------------------------------------------------------------*/ 
 Behandling0: proc;                                                     
                                                                        
 dcl ix    bin fixed (31);                                              
 dcl sumpct dec fixed (7,2) init(0);                                    
 dcl ny_raekke BIT (1)     INIT ('1'B);                                 
                                                                        
 indgaar_tab(*) = '';                                                   
 udskrives_tab(*) = '';                                                 
                                                                        
 do j = 1 to 150;                                                       
  do i = j to 150;                                                      
    if ny_raekke = ja then                                              
      do;                                                               
        dovtg = eenhed0_tab.dovtg(i);                                   
        dafst = eenhed0_tab.afstaa(i);                                  
        sumpct = sumpct + eenhed0_tab.gpctejer(i);                      
        indgaar_tab.fundet(i) = 'X';                                    
        ny_raekke = nej;                                                
      end;                                                              
    else                                                                
      do;                                                               
       if dovtg = eenhed0_tab.dovtg(i) &                                
          dafst = eenhed0_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed0_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed0_tab.dovtg(i) &                                
          dafst < eenhed0_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed0_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg < eenhed0_tab.dovtg(i) &                                
          dafst > eenhed0_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed0_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg = eenhed0_tab.dovtg(i) &                                
          dafst < eenhed0_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed0_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed0_tab.dovtg(i) &                                
          dafst = eenhed0_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed0_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
      end;                                                              
                                                                        
    if eenhed0_tab.ekomnr(i) = 0 then                                   
      i = 150;                                                          
  end;                                                                  
                                                                        
                                                                        
  if sumpct > 100 then                                                  
   do;                                                                  
    do ix = 1 to 150;                                                   
     if indgaar_tab.fundet(ix) = 'X' &                                  
        udskrives_tab.fundet(ix) = '' then                              
       do;                                                              
         udskriv_tab.ekomnr   = ConvFb15ToCh4(eenhed0_tab.ekomnr(ix));  
         udskriv_tab.eejdnr   = ConvFb31ToCh8(eenhed0_tab.eejdnr(ix));  
         udskriv_tab.dcprnr   = ConvDf11ToCh10(eenhed0_tab.dcprnr(ix)); 
         udskriv_tab.gpctejer = ConvDf52ToCh6(eenhed0_tab.gpctejer(ix));
         udskriv_tab.cejform  = eenhed0_tab.cejform(ix);                
         udskriv_tab.afstaa   = ConvDf9ToCh8(eenhed0_tab.afstaa(ix));   
         udskriv_tab.dovtg    = ConvDf9ToCh8(eenhed0_tab.dovtg(ix));    
         udskriv_tab.eenhedlbnr =                                       
                              ConvFb15ToCh4(eenhed0_tab.eenhedlbnr(ix));
         udskriv_tab.fejlnr   = ConvFb15ToCh4(eenhed0_tab.fejlnr(ix));  
         udskriv_tab.cejbevs  = eenhed0_tab.cejbevs(ix);                
         udskriv_tab.cdatafra = eenhed0_tab.cdatafra(ix);               
                                                                        
         if udskriv_tab.cdatafra = '' then                              
           do;                                                          
             WRITE FILE (BH104AO) FROM (udskriv_tab);                   
             ud_write104A += 1;                                         
           end;                                                         
         else                                                           
           do;                                                          
             WRITE FILE (BH104BO) FROM (udskriv_tab);                   
             ud_write104B += 1;                                         
           end;                                                         
         udskrives_tab.fundet(ix) = indgaar_tab.fundet(ix);             
       end;                                                             
    end;                                                                
   end;                                                                 
                                                                        
   indgaar_tab(*) = '';                                                 
   sumpct = 0;                                                          
   ny_raekke = ja;                                                      
   if eenhed0_tab.ekomnr(j) = 0 then                                    
      j = 150;                                                          
 end;                                                                   
                                                                        
 end Behandling0;                                                       
 /*-------------------------------------------------------------------- 
    Behandling af EENHEDLBNR = 1                                        
    Opdeles i diverse procedurer/funktioner med hvert sit formål        
 --------------------------------------------------------------------*/ 
 Behandling1: proc;                                                     
                                                                        
 dcl ix    bin fixed (31);                                              
 dcl sumpct dec fixed (7,2) init(0);                                    
 dcl ny_raekke BIT (1)     INIT ('1'B);                                 
                                                                        
 indgaar_tab(*) = '';                                                   
 udskrives_tab(*) = '';                                                 
                                                                        
 do j = 1 to 150;                                                       
  do i = j to 150;                                                      
    if ny_raekke = ja then                                              
      do;                                                               
        dovtg = eenhed1_tab.dovtg(i);                                   
        dafst = eenhed1_tab.afstaa(i);                                  
        sumpct = sumpct + eenhed1_tab.gpctejer(i);                      
        indgaar_tab.fundet(i) = 'X';                                    
        ny_raekke = nej;                                                
      end;                                                              
    else                                                                
      do;                                                               
       if dovtg = eenhed1_tab.dovtg(i) &                                
          dafst = eenhed1_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed1_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed1_tab.dovtg(i) &                                
          dafst < eenhed1_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed1_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg < eenhed1_tab.dovtg(i) &                                
          dafst > eenhed1_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed1_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg = eenhed1_tab.dovtg(i) &                                
          dafst < eenhed1_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed1_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed1_tab.dovtg(i) &                                
          dafst = eenhed1_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed1_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
      end;                                                              
                                                                        
    if eenhed1_tab.ekomnr(i) = 0 then                                   
      i = 150;                                                          
  end;                                                                  
                                                                        
                                                                        
  if sumpct > 100 then                                                  
   do;                                                                  
    do ix = 1 to 150;                                                   
     if indgaar_tab.fundet(ix) = 'X' &                                  
        udskrives_tab.fundet(ix) = '' then                              
       do;                                                              
         udskriv_tab.ekomnr   = ConvFb15ToCh4(eenhed1_tab.ekomnr(ix));  
         udskriv_tab.eejdnr   = ConvFb31ToCh8(eenhed1_tab.eejdnr(ix));  
         udskriv_tab.dcprnr   = ConvDf11ToCh10(eenhed1_tab.dcprnr(ix)); 
         udskriv_tab.gpctejer = ConvDf52ToCh6(eenhed1_tab.gpctejer(ix));
         udskriv_tab.cejform  = eenhed1_tab.cejform(ix);                
         udskriv_tab.afstaa   = ConvDf9ToCh8(eenhed1_tab.afstaa(ix));   
         udskriv_tab.dovtg    = ConvDf9ToCh8(eenhed1_tab.dovtg(ix));    
         udskriv_tab.eenhedlbnr =                                       
                              ConvFb15ToCh4(eenhed1_tab.eenhedlbnr(ix));
         udskriv_tab.fejlnr   = ConvFb15ToCh4(eenhed1_tab.fejlnr(ix));  
         udskriv_tab.cejbevs  = eenhed1_tab.cejbevs(ix);                
         udskriv_tab.cdatafra = eenhed1_tab.cdatafra(ix);               
                                                                        
         if udskriv_tab.cdatafra = '' then                              
           do;                                                          
             WRITE FILE (BH104AO) FROM (udskriv_tab);                   
             ud_write104A += 1;                                         
           end;                                                         
         else                                                           
           do;                                                          
             WRITE FILE (BH104BO) FROM (udskriv_tab);                   
             ud_write104B += 1;                                         
           end;                                                         
         udskrives_tab.fundet(ix) = indgaar_tab.fundet(ix);             
       end;                                                             
    end;                                                                
   end;                                                                 
                                                                        
   indgaar_tab(*) = '';                                                 
   sumpct = 0;                                                          
   ny_raekke = ja;                                                      
   if eenhed1_tab.ekomnr(j) = 0 then                                    
      j = 150;                                                          
 end;                                                                   
                                                                        
 end Behandling1;                                                       
 /*-------------------------------------------------------------------- 
    Behandling af EENHEDLBNR = 2                                        
    Opdeles i diverse procedurer/funktioner med hvert sit formål        
 --------------------------------------------------------------------*/ 
 Behandling2: proc;                                                     
                                                                        
 dcl ix    bin fixed (31);                                              
 dcl sumpct dec fixed (7,2) init(0);                                    
 dcl ny_raekke BIT (1)     INIT ('1'B);                                 
                                                                        
 indgaar_tab(*) = '';                                                   
 udskrives_tab(*) = '';                                                 
                                                                        
 do j = 1 to 150;                                                       
  do i = j to 150;                                                      
    if ny_raekke = ja then                                              
      do;                                                               
        dovtg = eenhed2_tab.dovtg(i);                                   
        dafst = eenhed2_tab.afstaa(i);                                  
        sumpct = sumpct + eenhed2_tab.gpctejer(i);                      
        indgaar_tab.fundet(i) = 'X';                                    
        ny_raekke = nej;                                                
      end;                                                              
    else                                                                
      do;                                                               
       if dovtg = eenhed2_tab.dovtg(i) &                                
          dafst = eenhed2_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed2_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed2_tab.dovtg(i) &                                
          dafst < eenhed2_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed2_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg < eenhed2_tab.dovtg(i) &                                
          dafst > eenhed2_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed2_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg = eenhed2_tab.dovtg(i) &                                
          dafst < eenhed2_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed2_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed2_tab.dovtg(i) &                                
          dafst = eenhed2_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed2_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
      end;                                                              
                                                                        
    if eenhed2_tab.ekomnr(i) = 0 then                                   
      i = 150;                                                          
  end;                                                                  
                                                                        
                                                                        
  if sumpct > 100 then                                                  
   do;                                                                  
    do ix = 1 to 150;                                                   
     if indgaar_tab.fundet(ix) = 'X' &                                  
        udskrives_tab.fundet(ix) = '' then                              
       do;                                                              
         udskriv_tab.ekomnr   = ConvFb15ToCh4(eenhed2_tab.ekomnr(ix));  
         udskriv_tab.eejdnr   = ConvFb31ToCh8(eenhed2_tab.eejdnr(ix));  
         udskriv_tab.dcprnr   = ConvDf11ToCh10(eenhed2_tab.dcprnr(ix)); 
         udskriv_tab.gpctejer = ConvDf52ToCh6(eenhed2_tab.gpctejer(ix));
         udskriv_tab.cejform  = eenhed2_tab.cejform(ix);                
         udskriv_tab.afstaa   = ConvDf9ToCh8(eenhed2_tab.afstaa(ix));   
         udskriv_tab.dovtg    = ConvDf9ToCh8(eenhed2_tab.dovtg(ix));    
         udskriv_tab.eenhedlbnr =                                       
                              ConvFb15ToCh4(eenhed2_tab.eenhedlbnr(ix));
         udskriv_tab.fejlnr   = ConvFb15ToCh4(eenhed2_tab.fejlnr(ix));  
         udskriv_tab.cejbevs  = eenhed2_tab.cejbevs(ix);                
         udskriv_tab.cdatafra = eenhed2_tab.cdatafra(ix);               
                                                                        
         if udskriv_tab.cdatafra = '' then                              
           do;                                                          
             WRITE FILE (BH104AO) FROM (udskriv_tab);                   
             ud_write104A += 1;                                         
           end;                                                         
         else                                                           
           do;                                                          
             WRITE FILE (BH104BO) FROM (udskriv_tab);                   
             ud_write104B += 1;                                         
           end;                                                         
         udskrives_tab.fundet(ix) = indgaar_tab.fundet(ix);             
       end;                                                             
    end;                                                                
   end;                                                                 
                                                                        
   indgaar_tab(*) = '';                                                 
   sumpct = 0;                                                          
   ny_raekke = ja;                                                      
   if eenhed2_tab.ekomnr(j) = 0 then                                    
      j = 150;                                                          
 end;                                                                   
                                                                        
 end Behandling2;                                                       
 /*-------------------------------------------------------------------- 
    Behandling af EENHEDLBNR = 3                                        
    Opdeles i diverse procedurer/funktioner med hvert sit formål        
 --------------------------------------------------------------------*/ 
 Behandling3: proc;                                                     
                                                                        
 dcl ix    bin fixed (31);                                              
 dcl sumpct dec fixed (7,2) init(0);                                    
 dcl ny_raekke BIT (1)     INIT ('1'B);                                 
                                                                        
 indgaar_tab(*) = '';                                                   
 udskrives_tab(*) = '';                                                 
                                                                        
 do j = 1 to 150;                                                       
  do i = j to 150;                                                      
    if ny_raekke = ja then                                              
      do;                                                               
        dovtg = eenhed3_tab.dovtg(i);                                   
        dafst = eenhed3_tab.afstaa(i);                                  
        sumpct = sumpct + eenhed3_tab.gpctejer(i);                      
        indgaar_tab.fundet(i) = 'X';                                    
        ny_raekke = nej;                                                
      end;                                                              
    else                                                                
      do;                                                               
       if dovtg = eenhed3_tab.dovtg(i) &                                
          dafst = eenhed3_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed3_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed3_tab.dovtg(i) &                                
          dafst < eenhed3_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed3_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg < eenhed3_tab.dovtg(i) &                                
          dafst > eenhed3_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed3_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg = eenhed3_tab.dovtg(i) &                                
          dafst < eenhed3_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed3_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed3_tab.dovtg(i) &                                
          dafst = eenhed3_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed3_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
      end;                                                              
                                                                        
    if eenhed3_tab.ekomnr(i) = 0 then                                   
      i = 150;                                                          
  end;                                                                  
                                                                        
                                                                        
  if sumpct > 100 then                                                  
   do;                                                                  
    do ix = 1 to 150;                                                   
     if indgaar_tab.fundet(ix) = 'X' &                                  
        udskrives_tab.fundet(ix) = '' then                              
       do;                                                              
         udskriv_tab.ekomnr   = ConvFb15ToCh4(eenhed3_tab.ekomnr(ix));  
         udskriv_tab.eejdnr   = ConvFb31ToCh8(eenhed3_tab.eejdnr(ix));  
         udskriv_tab.dcprnr   = ConvDf11ToCh10(eenhed3_tab.dcprnr(ix)); 
         udskriv_tab.gpctejer = ConvDf52ToCh6(eenhed3_tab.gpctejer(ix));
         udskriv_tab.cejform  = eenhed3_tab.cejform(ix);                
         udskriv_tab.afstaa   = ConvDf9ToCh8(eenhed3_tab.afstaa(ix));   
         udskriv_tab.dovtg    = ConvDf9ToCh8(eenhed3_tab.dovtg(ix));    
         udskriv_tab.eenhedlbnr =                                       
                              ConvFb15ToCh4(eenhed3_tab.eenhedlbnr(ix));
         udskriv_tab.fejlnr   = ConvFb15ToCh4(eenhed3_tab.fejlnr(ix));  
         udskriv_tab.cejbevs  = eenhed3_tab.cejbevs(ix);                
         udskriv_tab.cdatafra = eenhed3_tab.cdatafra(ix);               
                                                                        
         if udskriv_tab.cdatafra = '' then                              
           do;                                                          
             WRITE FILE (BH104AO) FROM (udskriv_tab);                   
             ud_write104A += 1;                                         
           end;                                                         
         else                                                           
           do;                                                          
             WRITE FILE (BH104BO) FROM (udskriv_tab);                   
             ud_write104B += 1;                                         
           end;                                                         
         udskrives_tab.fundet(ix) = indgaar_tab.fundet(ix);             
       end;                                                             
    end;                                                                
   end;                                                                 
                                                                        
   indgaar_tab(*) = '';                                                 
   sumpct = 0;                                                          
   ny_raekke = ja;                                                      
   if eenhed3_tab.ekomnr(j) = 0 then                                    
      j = 150;                                                          
 end;                                                                   
                                                                        
 end Behandling3;                                                       
 /*-------------------------------------------------------------------- 
    Behandling af EENHEDLBNR = 4                                        
    Opdeles i diverse procedurer/funktioner med hvert sit formål        
 --------------------------------------------------------------------*/ 
 Behandling4: proc;                                                     
                                                                        
 dcl ix    bin fixed (31);                                              
 dcl sumpct dec fixed (7,2) init(0);                                    
 dcl ny_raekke BIT (1)     INIT ('1'B);                                 
                                                                        
 indgaar_tab(*) = '';                                                   
 udskrives_tab(*) = '';                                                 
                                                                        
 do j = 1 to 150;                                                       
  do i = j to 150;                                                      
    if ny_raekke = ja then                                              
      do;                                                               
        dovtg = eenhed4_tab.dovtg(i);                                   
        dafst = eenhed4_tab.afstaa(i);                                  
        sumpct = sumpct + eenhed4_tab.gpctejer(i);                      
        indgaar_tab.fundet(i) = 'X';                                    
        ny_raekke = nej;                                                
      end;                                                              
    else                                                                
      do;                                                               
       if dovtg = eenhed4_tab.dovtg(i) &                                
          dafst = eenhed4_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed4_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed4_tab.dovtg(i) &                                
          dafst < eenhed4_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed4_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg < eenhed4_tab.dovtg(i) &                                
          dafst > eenhed4_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed4_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg = eenhed4_tab.dovtg(i) &                                
          dafst < eenhed4_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed4_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
       if dovtg > eenhed4_tab.dovtg(i) &                                
          dafst = eenhed4_tab.afstaa(i) then                            
        do;                                                             
          sumpct = sumpct + eenhed4_tab.gpctejer(i);                    
          indgaar_tab.fundet(i) = 'X';                                  
        end;                                                            
      end;                                                              
                                                                        
    if eenhed4_tab.ekomnr(i) = 0 then                                   
      i = 150;                                                          
  end;                                                                  
                                                                        
                                                                        
  if sumpct > 100 then                                                  
   do;                                                                  
    do ix = 1 to 150;                                                   
     if indgaar_tab.fundet(ix) = 'X' &                                  
        udskrives_tab.fundet(ix) = '' then                              
       do;                                                              
         udskriv_tab.ekomnr   = ConvFb15ToCh4(eenhed4_tab.ekomnr(ix));  
         udskriv_tab.eejdnr   = ConvFb31ToCh8(eenhed4_tab.eejdnr(ix));  
         udskriv_tab.dcprnr   = ConvDf11ToCh10(eenhed4_tab.dcprnr(ix)); 
         udskriv_tab.gpctejer = ConvDf52ToCh6(eenhed4_tab.gpctejer(ix));
         udskriv_tab.cejform  = eenhed4_tab.cejform(ix);                
         udskriv_tab.afstaa   = ConvDf9ToCh8(eenhed4_tab.afstaa(ix));   
         udskriv_tab.dovtg    = ConvDf9ToCh8(eenhed4_tab.dovtg(ix));    
         udskriv_tab.eenhedlbnr =                                       
                              ConvFb15ToCh4(eenhed4_tab.eenhedlbnr(ix));
         udskriv_tab.fejlnr   = ConvFb15ToCh4(eenhed4_tab.fejlnr(ix));  
         udskriv_tab.cejbevs  = eenhed4_tab.cejbevs(ix);                
         udskriv_tab.cdatafra = eenhed4_tab.cdatafra(ix);               
                                                                        
         if udskriv_tab.cdatafra = '' then                              
           do;                                                          
             WRITE FILE (BH104AO) FROM (udskriv_tab);                   
             ud_write104A += 1;                                         
           end;                                                         
         else                                                           
           do;                                                          
             WRITE FILE (BH104BO) FROM (udskriv_tab);                   
             ud_write104B += 1;                                         
           end;                                                         
         udskrives_tab.fundet(ix) = indgaar_tab.fundet(ix);             
       end;                                                             
    end;                                                                
   end;                                                                 
                                                                        
   indgaar_tab(*) = '';                                                 
   sumpct = 0;                                                          
   ny_raekke = ja;                                                      
   if eenhed4_tab.ekomnr(j) = 0 then                                    
      j = 150;                                                          
 end;                                                                   
                                                                        
 end Behandling4;                                                       
                                                                        
 /*-------------------------------------------------------------------- 
    Initier                                                             
 --------------------------------------------------------------------*/ 
 Initier: proc;                                                         
                                                                        
    call zm2Today ();                                                   
    call zm2ReadParms;                                                  
    call zm2PrnStdOpen;                                                 
                                                                        
    OPEN FILE (BH104AO) TITLE ('BH10400O');                             
    OPEN FILE (BH104BO) TITLE ('BH10410O');                             
                                                                        
    do i = 1 to 50;                                                     
      if zm2ParmTab(i).Active then                                      
         select (uppercase(zm2ParmTab(i).Parm));                        
            when ('EVSAAR')                                             
              do;                                                       
                hj_evsaar = zm2ParmTab(i).value;                        
                call zm2PrnLine (ZZWK1,                                 
                                 'TIL_EVS_AAR: ' !! zm2ParmTab(i).Text, 
                                 PrnMessage);                           
              end;                                                      
            when ('DATAID')                                             
              do;                                                       
                 hj_dataid = zm2ParmTab(i).value;                       
                 call zm2PrnLine (ZZWK1,                                
                                  'DATA_ID   : ' !! zm2ParmTab(i).Text, 
                                  PrnMessage);                          
              end;                                                      
            otherwise;                                                  
         end; // select                                                 
    end; // do                                                          
                                                                        
 end Initier;                                                           
                                                                        
 /*-------------------------------------------------------------------- 
   Procedurenavn  : FindFelt                                            
   Funktion       : Finder næste felt og returnere længden              
 --------------------------------------------------------------------*/ 
 OPEN_CSR: proc (Str);                                                  
 dcl  Str            char (*);                                          
                                                                        
  if Str = 'A' then                                                     
    do;                                                                 
      EXEC SQL DECLARE EEJDNR_CSR CURSOR FOR                            
       select distinct T78.ekomnr, T78.eejdnr                           
         from bq78000t T78                                              
        where T78.til_evs_aar = :hj_evsaar                              
          and T78.AFVIKLINGS_ID = 'OPRET_EVS_SLUT'                      
          and T78.data_id  = :hj_dataid                                 
        order by T78.ekomnr, T78.eejdnr                                 
        FOR READ ONLY                                                   
        ;                                                               
                                                                        
      EXEC SQL OPEN EEJDNR_CSR;                                         
                                                                        
      call zm2CheckSQLParm ('Open CSR on EEJDNR_CSR');                  
    end;                                                                
                                                                        
  if Str = 'B' then                                                     
    do;                                                                 
      EXEC SQL DECLARE GPCTEJER_CSR CURSOR FOR                          
       SELECT T78.ekomnr,                                               
              T78.eejdnr,                                               
              T78.dcprn,                                                
              T78.TILEVS_GPCTEJER,                                      
              T78.TILEVS_A_EJ_CEJFORH,                                  
              case                                                      
                  when T78.TILEVS_DAFSTAA = 0 then 99991231             
                                          else T78.TILEVS_DAFSTAA       
                  end,                                                  
              case                                                      
                  when T78.TILEVS_DOVTG = 0 then 00010101               
                                        else T78.TILEVS_DOVTG           
                  end,                                                  
              T78.eenhedlbnr,                                           
              T78.fejlnr,                                               
              T78.TILEVS_CDATAFRA,                                      
              T78.TILEVS_CEJBEVS                                        
         FROM bq78000t T78,                                             
              bq77000t T77,                                             
              bq76000t T76                                              
        where T78.til_evs_aar   = :hj_evsaar                            
          and T78.AFVIKLINGS_ID = 'OPRET_EVS_SLUT'                      
          and T78.data_id       = :hj_dataid                            
          and T78.ekomnr        = :DCLBQ78000T.EKOMNR                   
          and T78.eejdnr        = :DCLBQ78000T.EEJDNR                   
          and T77.til_evs_aar = T78.til_evs_aar                         
          and T77.AFVIKLINGS_ID = T78.AFVIKLINGS_ID                     
          and T77.data_id  =  T78.data_id                               
          and T77.EKOMNR = T78.EKOMNR                                   
          and T77.DCPRN = T78.DCPRN                                     
          and T77.EEJDNR = T78.EEJDNR                                   
          and T77.EENHEDLBNR = T78.EENHEDLBNR                           
          and T77.egennr = T78.egennr                                   
          and T77.evssej_sid_cslet ^= '1'                               
          and T76.til_evs_aar = T78.til_evs_aar                         
          and T76.AFVIKLINGS_ID = T78.AFVIKLINGS_ID                     
          and T76.data_id  =  T78.data_id                               
          and T76.EKOMNR = T78.EKOMNR                                   
          and T76.DCPRN = T78.DCPRN                                     
          and T76.EEJDNR = T78.EEJDNR                                   
          and T76.EENHEDLBNR = T78.EENHEDLBNR                           
          and T76.egennr = T78.egennr                                   
          and T76.ccivs ^= 'D'                                          
                                                                        
        order by T78.eenhedlbnr, T78.TILEVS_DOVTG, T78.TILEVS_DAFSTAA   
          FOR READ ONLY                                                 
          ;                                                             
                                                                        
      EXEC SQL OPEN GPCTEJER_CSR;                                       
                                                                        
      call zm2CheckSQLParm ('Open CSR on GPCTEJER_CSR');                
    end;                                                                
                                                                        
 end OPEN_CSR;                                                          
 /*-------------------------------------------------------------------- 
   Procedurenavn  : FindFelt                                            
   Funktion       : Finder næste felt og returnere længden              
 --------------------------------------------------------------------*/ 
 FETCH_CSR: proc (Str);                                                 
 dcl  Str            char (*);                                          
                                                                        
  DCLBQ78000T = '';                                                     
                                                                        
  if Str = 'A' then                                                     
    do;                                                                 
      EXEC SQL FETCH EEJDNR_CSR                                         
         INTO                                                           
            :DCLBQ78000T.EKOMNR,                                        
            :DCLBQ78000T.EEJDNR;                                        
                                                                        
      call zm2CheckSQLParm ('Fetch CSR on EEJDNR_CSR');                 
      if zm2DB2ReturnCode = zm2OK then                                  
        do;                                                             
          RESULT_A_FUNDET = ja;                                         
          indA_rec += 1;                                                
        end;                                                            
      else                                                              
        RESULT_A_FUNDET = nej;                                          
    end;                                                                
                                                                        
  if Str = 'B' then                                                     
    do;                                                                 
      EXEC SQL FETCH GPCTEJER_CSR                                       
         INTO                                                           
            :DCLBQ78000T.EKOMNR,                                        
            :DCLBQ78000T.EEJDNR,                                        
            :DCLBQ78000T.DCPRN,                                         
            :DCLBQ78000T.TILEVS_GPCTEJER,                               
            :DCLBQ78000T.TILEVS_A_EJ_CEJFORH,                           
            :DCLBQ78000T.TILEVS_DAFSTAA,                                
            :DCLBQ78000T.TILEVS_DOVTG,                                  
            :DCLBQ78000T.EENHEDLBNR,                                    
            :DCLBQ78000T.FEJLNR,                                        
            :DCLBQ78000T.TILEVS_CDATAFRA,                               
            :DCLBQ78000T.TILEVS_CEJBEVS;                                
                                                                        
      call zm2CheckSQLParm ('Close CSR on GPCTEJER_CSR');               
      if zm2DB2ReturnCode = zm2OK then                                  
        do;                                                             
          RESULT_B_FUNDET = ja;                                         
          indB_rec += 1;                                                
        end;                                                            
      else                                                              
        RESULT_B_FUNDET = nej;                                          
    end;                                                                
                                                                        
 end FETCH_CSR;                                                         
  /*--------------------------------------------------------------------
   Procedurenavn  : FindFelt                                            
   Funktion       : Finder næste felt og returnere længden              
 --------------------------------------------------------------------*/ 
 CLOSE_CSR: proc (Str);                                                 
 dcl  Str            char (*);                                          
                                                                        
  if Str = 'A' then                                                     
    do;                                                                 
      EXEC SQL CLOSE EEJDNR_CSR;                                        
                                                                        
      call zm2CheckSQLParm ('Close CSR on EEJDNR_CSR');                 
    end;                                                                
                                                                        
  if Str = 'B' then                                                     
    do;                                                                 
      EXEC SQL CLOSE GPCTEJER_CSR;                                      
                                                                        
      call zm2CheckSQLParm ('Close CSR on GPCTEJER_CSR');               
    end;                                                                
                                                                        
 end CLOSE_CSR;                                                         
 /*-------------------------------------------------------------------- 
   Procedurenavn  : cor_close                                           
 --------------------------------------------------------------------*/ 
 cor_close: procedure;                                                  
                                                                        
    close file (BH104AO);                                               
    close file (BH104BO);                                               
                                                                        
 end cor_close;                                                         
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvCh4ToFb15                                       
 --------------------------------------------------------------------*/ 
 ConvCh4ToFb15: proc (c) returns (bin fixed (15));                      
 dcl  t  bin fixed (15);                                                
 dcl  c  char (4);                                                      
 dcl  p  pic 'zzz9' def c;                                              
                                                                        
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvCh4ToFb15;                                                     
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvFb15ToCh4                                       
 --------------------------------------------------------------------*/ 
 ConvFb15ToCh4: proc (c) returns (char (4));                            
 dcl  c  bin fixed (15);                                                
 dcl  p  pic '9999';                                                    
 dcl  t  char (4);                                                      
                                                                        
    p = c;                                                              
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvFb15ToCh4;                                                     
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvFb31ToCh8                                       
 --------------------------------------------------------------------*/ 
 ConvFb31ToCh8: proc (c) returns (char (8));                            
 dcl  c  bin fixed (31);                                                
 dcl  p  pic 'zzzzzzz9';                                                
 dcl  t  char (8);                                                      
                                                                        
    p = c;                                                              
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvFb31ToCh8;                                                     
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvDf52ToCh6                                       
 --------------------------------------------------------------------*/ 
 ConvDf52ToCh6: proc (c) returns (char (6));                            
 dcl  c  dec fixed (5,2);                                               
 dcl  p  pic 'zz9V.99';                                                 
 dcl  t  char (6);                                                      
                                                                        
    p = c;                                                              
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvDf52ToCh6;                                                     
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvDf9ToCh8                                        
 --------------------------------------------------------------------*/ 
 ConvDf9ToCh8: proc (c) returns (char (8));                             
 dcl  c  dec fixed (9,0);                                               
 dcl  p  pic 'zzzzzzz9';                                                
 dcl  t  char (8);                                                      
                                                                        
    p = c;                                                              
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvDf9ToCh8;                                                      
 /*-------------------------------------------------------------------- 
   Procedurenavn  : ConvDf11ToCh10                                      
 --------------------------------------------------------------------*/ 
 ConvDf11ToCh10: proc (c) returns (char (10));                          
 dcl  c  dec fixed (11,0);                                              
 dcl  p  pic 'zzzzzzzzz9';                                              
 dcl  t  char (10);                                                     
                                                                        
    p = c;                                                              
    t = p;                                                              
    return (t);                                                         
                                                                        
 end ConvDf11ToCh10;                                                    
 /*-------------------------------------------------------------------- 
    Program slut                                                        
    Udskriv lister, luk filer, osv.                                     
 --------------------------------------------------------------------*/ 
 Afslut: proc;                                                          
                                                                        
    call zm2PrnLineCount (ZZWK1,                                        
          'Antal records læst CSR_A  : ', indA_rec, PrnCount);          
    call zm2PrnLineCount (ZZWK1,                                        
          'Antal records læst CSR_B  : ', indB_rec, PrnCount);          
    call zm2PrnLineCount (ZZWK1,                                        
          'Antal rækker skrevet 104A : ', ud_write104A, PrnCount);      
    call zm2PrnLineCount (ZZWK1,                                        
          'Antal rækker skrevet 104B : ', ud_write104B, PrnCount);      
                                                                        
    call zm2PrnStdTotal;                                                
    call zm2PrnClose;                                                   
                                                                        
 end Afslut;                                                            
                                                                        
 end BH10400;                                                           
