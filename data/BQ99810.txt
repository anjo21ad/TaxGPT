 BQ99810: PROC OPTIONS(MAIN,REENTRANT) REORDER;                         
 /**********************************************************************
 *                                                                     *
 *     SKELETPROGRAM GENERERET AF ZSRØR                                *
 *                                                                     *
 *       EXTERN MODUL-BESKRIVELSE                                      *
 *                                                                     *
 *       NAVN          - BQ99810                                       *
 *                                                                     *
 *       FUNKTION      - LOGNING AF EVS BEREGNINGS REQUEST/REPLY       *
 *                                                                     *
 *       TRANSKODE     - B973                                          *
 *                                                                     *
 *       INDDATA       - COMMAREA                                      *
 *                                                                     *
 *       UDDATA        - VB.Q99810D                                    *
 *                       BQ60000T                                      *
 *                                                                     *
 *       EXTERNE REF.  -                                               *
 *                                                                     *
 *       GENERERET AF  - JØRGEN SAUGMANN      18.12.13                 *
 *                                                                     *
 *       RETTET        -                                               *
 *                                                                     *
 **********************************************************************/
                                                                        
 /**********************************************************************
 *    INPUT AREAL VIA RETRIEVE                                         *
 **********************************************************************/
 DCL 1 INPUT                  UNALIGNED,                                
 %INCLUDE BQ99810N;                                                     
                                                                        
 DCL MSGDATA                  BASED(INPUT.STRUKPTR)                     
                              CHAR(32000) VAR;                          
                                                                        
 DCL 1 BRUGERDATA             BASED(INPUT.STRUKPTR),                    
       3 INDVNR               BIN FIXED (15) UNAL,                      
       3 INDVLGD              BIN FIXED (15) UNAL,                      
       3 FELTLGD              BIN FIXED (15) UNAL,                      
       3 HEADER               CHAR(8),                                  
       3 DINDKAAR             CHAR(4),                                  
       3 DCPRN                CHAR(10),                                 
       3 EKOMNR_EEJDNR        CHAR(10);                                 
                                                                        
 DCL 1 INDV_811_I             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13001N;                                                     
 DCL 1 INDV_811_O             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13002N;;                                                    
 DCL 1 INDV_813_I             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13004N;                                                     
 DCL 1 INDV_813_O             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13014N;                                                     
 DCL 1 INDV_814_IO            BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13008N;;                                                    
 DCL 1 INDV_815_I             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ03004N;                                                     
 DCL 1 INDV_815_O             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ03014N;                                                     
 DCL 1 INDV_816_I             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13001N;                                                     
 DCL 1 INDV_816_O             BASED(INPUT.STRUKPTR),                    
 %INCLUDE BQ13002N;;                                                    
 DCL VSAM_REC                 BASED(INPUT.STRUKPTR)                     
                              CHAR(32000) VAR;                          
                                                                        
 /**********************************************************************
 *    LOG-/ABEND RUTINE.                                               *
 **********************************************************************/
 %INCLUDE ZS37800M;                                                     
                                                                        
 /**********************************************************************
 *    DB2 DEFINITIONER                                                 *
 **********************************************************************/
 %INCLUDE SQLCA;                                                        
 %INCLUDE BQ60000N;                                                     
 DCL CLOB_VAR                                                           
   SQL TYPE IS CLOB (512768);                                           
                                                                        
 DCL LD_PTR                     PTR; /* POINTER TIL LOGDATA        */   
 DCL LD_CHAR                    BASED(LD_PTR)                           
                                CHAR(1);                                
 DCL LD_INX                     FIXED BIN(31)  INIT(0);                 
                                                                        
 /**********************************************************************
 *    XML DEFINITIONER                                                 *
 **********************************************************************/
 DCL XML_BUFFER        CHAR(32000);                                     
 DCL BUFFER_PTR        PTR;                                             
 DCL BUFFER_LGD        FIXED BIN(31,0)      INIT(32000);                
 DCL XML_LGD           FIXED BIN(31,0)      INIT(0);                    
                                                                        
 /**********************************************************************
 *    ØVRIGE DECLARES                                                  *
 **********************************************************************/
 DCL  IDX                  FIXED BIN(15,0)  INIT(0);                    
 DCL  IDY                  FIXED BIN(15,0)  INIT(0);                    
 DCL  CICSRC               FIXED BIN(31,0)  INIT(0);                    
 DCL  RTC                  FIXED BIN(31,0)  INIT(0);                    
 DCL  RTR                  FIXED BIN(31,0)  INIT(0);                    
 DCL  RTT                  CHAR(70)         INIT('');                   
 DCL (ADDR,CSTG,NULL,STG,SUBSTR,XMLCHAR,PTRADD)    BUILTIN;             
 DCL (BINARY,DECIMAL,LENGTH)                       BUILTIN;             
                                                                        
 /**********************************************************************
 *    HOUSE-KEEPING                                                    *
 **********************************************************************/
 EXEC CICS HANDLE CONDITION ERROR(CICS_ERROR);                          
                                                                        
 /**********************************************************************
 *    HOVEDSTYRING  #####                                              *
 **********************************************************************/
                                                                        
   EXEC CICS RETRIEVE INTO  (INPUT)                                     
                      LENGTH(STG(INPUT))                                
                      RESP  (CICSRC);                                   
   IF CICSRC ^= 0                                                       
   THEN                                                                 
      CALL CICS_ERROR('FEJL VED RETRIEVE');                             
   /*                                                                   
   PUT SKIP LIST('INPUT: RACF_ID     = '!!INPUT.RACF_ID);               
   PUT SKIP LIST('       SERVICENAVN = '!!INPUT.SERVICENAVN);           
   PUT SKIP LIST('       RETNING     = '!!INPUT.RETNING);               
   PUT SKIP LIST('       ELEMANT     = '!!INPUT.ELEMANT);               
      */                                                                
                                                                        
   /*                                                                   
   CALL OPRET_VSAM_REC;                                                 
      */                                                                
                                                                        
   DCLBQ60000N.LOGDATA.SQL_LOB_LEN    = 0;                              
   DCLBQ60000N.LOGDATA.SQL_LOB_BUF(*) = '';                             
   DCLBQ60000N.LOGDATA.SQL_LOB_BUFX   = '';                             
   LD_PTR                             = ADDR(LOGDATA.SQL_LOB_BUF(1));   
                                                                        
   CALL OPSÆT_STAMOPL;                                                  
   BUFFER_PTR = ADDR(XML_BUFFER);                                       
   BUFFER_LGD = STG(XML_BUFFER);                                        
   SELECT(BRUGERDATA.INDVNR);                                           
      WHEN(811) DO;                                                     
         SELECT(INPUT.IO_MARK);                                         
            WHEN('I') XML_LGD = XMLCHAR(INDV_811_I,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            WHEN('O') XML_LGD = XMLCHAR(INDV_811_O,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            OTHERWISE DO;                                               
               RTC = 1;                                                 
               RTR = 2;                                                 
               RTT = 'UKENDT IO_MARK, '!!INPUT.IO_MARK;                 
            END;                                                        
         END;                                                           
      END;                                                              
      WHEN(813) DO;                                                     
         SELECT(INPUT.IO_MARK);                                         
            WHEN('I') XML_LGD = XMLCHAR(INDV_813_I,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            WHEN('O') XML_LGD = XMLCHAR(INDV_813_O,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            OTHERWISE DO;                                               
               RTC = 1;                                                 
               RTR = 2;                                                 
               RTT = 'UKENDT IO_MARK, '!!INPUT.IO_MARK;                 
            END;                                                        
         END;                                                           
      END;                                                              
      WHEN(814) DO;                                                     
         SELECT(INPUT.IO_MARK);                                         
            WHEN('I') XML_LGD = XMLCHAR(INDV_814_IO,                    
                                        BUFFER_PTR,BUFFER_LGD);         
            WHEN('O') XML_LGD = XMLCHAR(INDV_814_IO,                    
                                        BUFFER_PTR,BUFFER_LGD);         
            OTHERWISE DO;                                               
               RTC = 1;                                                 
               RTR = 2;                                                 
               RTT = 'UKENDT IO_MARK, '!!INPUT.IO_MARK;                 
            END;                                                        
         END;                                                           
      END;                                                              
      WHEN(815) DO;                                                     
         SELECT(INPUT.IO_MARK);                                         
            WHEN('I') XML_LGD = XMLCHAR(INDV_815_I,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            WHEN('O') XML_LGD = XMLCHAR(INDV_815_O,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            OTHERWISE DO;                                               
               RTC = 1;                                                 
               RTR = 2;                                                 
               RTT = 'UKENDT IO_MARK, '!!INPUT.IO_MARK;                 
            END;                                                        
         END;                                                           
      END;                                                              
      WHEN(816) DO;                                                     
         SELECT(INPUT.IO_MARK);                                         
            WHEN('I') XML_LGD = XMLCHAR(INDV_816_I,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            WHEN('O') XML_LGD = XMLCHAR(INDV_816_O,                     
                                        BUFFER_PTR,BUFFER_LGD);         
            OTHERWISE DO;                                               
               RTC = 1;                                                 
               RTR = 2;                                                 
               RTT = 'UKENDT IO_MARK, '!!INPUT.IO_MARK;                 
            END;                                                        
         END;                                                           
      END;                                                              
      OTHERWISE DO;                                                     
         RTC = 1;                                                       
         RTR = 1;                                                       
         RTT = 'UKENDT INDIVIDNR, '!!BRUGERDATA.INDVNR;                 
      END;                                                              
   END;                                                                 
   IF RTC = 0                                                           
   THEN DO;                                                             
      CALL FLYT_DATA;                                                   
      CALL OPRET_RÆKKE;                                                 
   END;                                                                 
                                                                        
   CALL FREEMAIN(INPUT.STRUKPTR);                                       
                                                                        
   /*                                                                   
   PUT SKIP LIST('RTC: '!!RTC);                                         
   PUT SKIP LIST('RTR: '!!RTR);                                         
   PUT SKIP LIST('RTT: '!!RTT);                                         
      */                                                                
                                                                        
   EXEC CICS RETURN;                                                    
                                                                        
 /**********************************************************************
 *    OPSÆT STAMP OPLYSNINGER                                          *
 **********************************************************************/
 OPSÆT_STAMOPL: PROC;                                                   
                                                                        
   /*                                                                   
   PUT SKIP LIST('BQ99810 INPUT');                                      
   PUT SKIP LIST('IO_MARK      = '!!INPUT.IO_MARK);                     
   PUT SKIP LIST('UNIKEY       = '!!INPUT.UNIKEY);                      
   PUT SKIP LIST('PUT_DATETIME = '!!INPUT.PUT_DATETIME);                
   PUT SKIP LIST('INDIVID NR   = '!!BRUGERDATA.INDVNR);                 
      */                                                                
   DCLBQ60000N                = '';                                     
   DCLBQ60000N.UNIKEY         = INPUT.UNIKEY;                           
   DCLBQ60000N.IO_MARK        = INPUT.IO_MARK;                          
   DCLBQ60000N.CCPRNR         = BRUGERDATA.DCPRN;                       
   DCLBQ60000N.CINDKAAR       = BRUGERDATA.DINDKAAR;                    
   IF BRUGERDATA.INDVNR ^= 814                                          
   THEN                                                                 
      DCLBQ60000N.EKOMNR_EEJDNR  = BRUGERDATA.EKOMNR_EEJDNR;            
   DCLBQ60000N.PUT_DATETIME   = INPUT.PUT_DATETIME;                     
   DCLBQ60000N.FEJLNR         = INPUT.FEJLNR;                           
   DCLBQ60000N.FEJLTEKST      = INPUT.FEJLTEKST;                        
                                                                        
 END OPSÆT_STAMOPL;                                                     
                                                                        
 /**********************************************************************
 *    FLYT DATA FRA XML_BUFFER TIL LOGDATA                             *
 **********************************************************************/
 FLYT_DATA: PROC;                                                       
                                                                        
   LD_INX = 0;                                                          
   DO LD_INX = 1 TO XML_LGD;                                            
      IF SUBSTR(XML_BUFFER,LD_INX,1) ^= ' ' /* LOW VALUE */             
      THEN DO;                                                          
         LD_CHAR = SUBSTR(XML_BUFFER,LD_INX,1);                         
         LD_PTR  = PTRADD(LD_PTR,1);                                    
      END;                                                              
      ELSE DO;                                                          
         XML_LGD = XML_LGD - 1;                                         
      END;                                                              
   END;                                                                 
   LOGDATA.SQL_LOB_LEN = LOGDATA.SQL_LOB_LEN + XML_LGD;                 
                                                                        
 END FLYT_DATA;                                                         
                                                                        
 /**********************************************************************
 *    OPRET PÅ DB2 TABEL                                               *
 **********************************************************************/
 OPRET_RÆKKE: PROC;                                                     
                                                                        
   /*                                                                   
   PUT SKIP LIST('BN37000T INSERT');                                    
   PUT SKIP LIST('DINDKAAR  = '!!DCLBN37000N.DINDKAAR);                 
   PUT SKIP LIST('DCPNR_HOP = '!!DCLBN37000N.DCPNR_HOP);                
   PUT SKIP LIST('DCPNR_BIP = '!!DCLBN37000N.DCPNR_BIP);                
      */                                                                
                                                                        
   EXEC SQL                                                             
      INSERT INTO BQ60000T                                              
         (TSTMP                                                         
         ,UNIKEY                                                        
         ,IO_MARK                                                       
         ,CCPRNR                                                        
         ,CINDKAAR                                                      
         ,EKOMNR_EEJDNR                                                 
         ,PUT_DATETIME                                                  
         ,FEJLNR                                                        
         ,FEJLTEKST                                                     
         ,LOGDATA)                                                      
         VALUES(CURRENT TIMESTAMP                                       
               ,:DCLBQ60000N.UNIKEY                                     
               ,:DCLBQ60000N.IO_MARK                                    
               ,:DCLBQ60000N.CCPRNR                                     
               ,:DCLBQ60000N.CINDKAAR                                   
               ,:DCLBQ60000N.EKOMNR_EEJDNR                              
               ,:DCLBQ60000N.PUT_DATETIME                               
               ,:DCLBQ60000N.FEJLNR                                     
               ,:DCLBQ60000N.FEJLTEKST                                  
               ,:DCLBQ60000N.LOGDATA                                    
               );                                                       
   IF SQLCA.SQLCODE ^= 0                                                
   THEN DO;                                                             
      RTC = 9;                                                          
      RTR = SQLCA.SQLCODE;                                              
      RTT = 'FEJL VED INSERT PÅ BN60000T';                              
      CALL SQL_FEJL;                                                    
   END;                                                                 
                                                                        
 END OPRET_RÆKKE;                                                       
                                                                        
 /**********************************************************************
 *    OPRET VSAM RECORD                                                *
 **********************************************************************/
 OPRET_VSAM_REC: PROC;                                                  
 DCL 1 BQ99810M,                                                        
 %INCLUDE BQ99810M;                                                     
 DCL KEYAREA             BASED(ADDR(BQ99810M.UNIKEY))                   
                         CHAR(51);                                      
                                                                        
   BQ99810M.UNIKEY       = INPUT.UNIKEY;                                
   BQ99810M.IO_MARK      = INPUT.IO_MARK;                               
   BQ99810M.TSTMP        = GET_TIMESTAMP;                               
   BQ99810M.PUT_DATETIME = INPUT.PUT_DATETIME;                          
   BQ99810M.LOGDATA      = SUBSTR(MSGDATA,1,INPUT.STRUKLGD);            
                                                                        
   EXEC CICS WRITE FILE     ('BQ99810U')                                
                   FROM     (BQ99810M)                                  
                   RIDFLD   (KEYAREA)                                   
                   KEYLENGTH(STG(KEYAREA))                              
                   LENGTH   (STG(BQ99810M))                             
                   RESP     (CICSRC);                                   
   IF CICSRC ^= 0                                                       
   THEN DO;                                                             
      CALL CICS_ERROR('WRITE BQ99810U');                                
   END;                                                                 
                                                                        
 END OPRET_VSAM_REC;                                                    
                                                                        
 /*********************************************************************/
 /*      HER DANNES ET TIMESTAMP                                      */
 /*********************************************************************/
 GET_TIMESTAMP: PROC RETURNS(CHAR(26));                                 
 DCL CTS        CHAR(26)        INIT('');                               
                                                                        
    CTS = '';                                                           
    EXEC SQL SET :CTS = CURRENT TIMESTAMP;                              
    RETURN(CTS);                                                        
                                                                        
 END GET_TIMESTAMP;                                                     
                                                                        
 /*********************************************************************/
 /*      HER UDSKRIVES SQL FEJL VED HJÆLP AF STD. RUTINE              */
 /*********************************************************************/
 SQL_FEJL: PROC;                                                        
                                                                        
    ZS378TYPE     = 'DB2';                                              
    ZS378ROLLB    = 'JA';                                               
    ZS378SQLCA    = ADDR(SQLCA);                                        
    CALL ABEND_PROCEDURE(' ');                                          
                                                                        
 END SQL_FEJL;                                                          
                                                                        
 /********************************************************************/ 
 /*      HER UDSKRIVES CICS FEJL VED HJÆLP AF STD. RUTINE            */ 
 /********************************************************************/ 
 CICS_ERROR: PROC(CE_FTXT);                                             
 DCL CE_FTXT              CHAR(100) VAR;                                
                                                                        
    ZS378TYPE  = 'CICS';                                                
    CE_FTXT = CE_FTXT!!', RC = '!!CICSRC!!'  '!!OVERSÆT_CICSRC;         
    CALL ABEND_PROCEDURE(CE_FTXT);                                      
                                                                        
                                                                        
 OVERSÆT_CICSRC: PROC RETURNS(CHAR (50) VARYING);                       
 DCL RETTXT      CHAR(50) VARYING;                                      
                                                                        
    SELECT(CICSRC);                                                     
       WHEN(DFHRESP(ENDDATA))      RETTXT = 'ENDDATA';                  
       WHEN(DFHRESP(ENVDEFERR))    RETTXT = 'ENVDEFERR';                
       WHEN(DFHRESP(INVREQ))       RETTXT = 'INVREQ';                   
       WHEN(DFHRESP(IOERR))        RETTXT = 'IOERR';                    
       WHEN(DFHRESP(LENGERR))      RETTXT = 'LENGERR';                  
       WHEN(DFHRESP(CHANNELERR))   RETTXT = 'CHANNELERR';               
       WHEN(DFHRESP(NOTAUTH))      RETTXT = 'NOTAUTH';                  
       WHEN(DFHRESP(PGMIDERR))     RETTXT = 'PGMIDERR';                 
       WHEN(DFHRESP(RESUNAVAIL))   RETTXT = 'RESUNAVAIL';               
       WHEN(DFHRESP(ROLLEDBACK))   RETTXT = 'ROLLEDBACK';               
       WHEN(DFHRESP(SYSIDERR))     RETTXT = 'SYSIDERR';                 
       WHEN(DFHRESP(TERMERR))      RETTXT = 'TERMERR';                  
       WHEN(DFHRESP(DISABLED))     RETTXT = 'DISABLED';                 
       WHEN(DFHRESP(DUPREC))       RETTXT = 'DUPREC';                   
       WHEN(DFHRESP(FILENOTFOUND)) RETTXT = 'FILENOTFOUND';             
       WHEN(DFHRESP(SUPPRESSED))   RETTXT = 'SUPPRESSED';               
       WHEN(DFHRESP(ISCINVREQ))    RETTXT = 'ISCINVREQ';                
       WHEN(DFHRESP(ILLOGIC))      RETTXT = 'ILLOGIC';                  
       WHEN(DFHRESP(LOADING))      RETTXT = 'LOADING';                  
       WHEN(DFHRESP(LOCKED))       RETTXT = 'LOCKED';                   
       WHEN(DFHRESP(NOSPACE))      RETTXT = 'NOSPACE';                  
       WHEN(DFHRESP(NOTOPEN))      RETTXT = 'NOTOPEN';                  
       WHEN(DFHRESP(RECORDBUSY))   RETTXT = 'RECORDBUSY';               
       OTHERWISE                 RETTXT = 'EJ DEFINERET';               
    END;                                                                
    RETURN(RETTXT);                                                     
                                                                        
 END OVERSÆT_CICSRC;                                                    
                                                                        
 END CICS_ERROR;                                                        
                                                                        
 /**********************************************************************
 *    ABEND PÅ EN PÆN MÅDE                                             *
 **********************************************************************/
 ABEND_PROCEDURE:  PROC(AP_FTXT);                                       
 DCL AP_FTXT           CHAR(100) VAR;                                   
                                                                        
   ZS378FUNK  = '04';         /* AFSLUT, COMMAREA SLETTES     */        
   ZS378MODUL = 'BQ99810';                                              
   ZS378KODE  = EIBTRNID;                                               
   IF LENGTH(AP_FTXT) > 5                                               
   THEN                                                                 
      ZS378TEKST = AP_FTXT;                                             
   ELSE                                                                 
      ZS378TEKST = RTT;                                                 
   %INCLUDE ZS37802M;                                                   
 END ABEND_PROCEDURE;                                                   
                                                                        
 /**********************************************************************
 *    STANDARD INCLUDES                                                *
 **********************************************************************/
 %INCLUDE ZX23000G         /* GETMAIN RUTINE     */;                    
 %INCLUDE ZX23000F         /* FREEMAIN RUTINE    */;                    
                                                                        
 END BQ99810;                                                           
