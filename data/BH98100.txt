 BH98100: PROCEDURE OPTIONS (MAIN);                                     
 /********************************************************************/ 
 /* Projekt:     EVS Slut 2019                                       */ 
 /* Programnavn: BH98100                                             */ 
 /* Programtype: Batch                                               */ 
 /*                                                                  */ 
 /* Funktion:    Dan PL/1 include til individ 132 & 135              */ 
 /*                                                                  */ 
 /* Input:       INP132 - Individ struktur 132 modtaget fra DXC      */ 
 /*              INP135 - Individ struktur 135 modtaget fra DXC      */ 
 /*                                                                  */ 
 /*              PARM   - Ligningsår (1 ciffer)                      */ 
 /*                       Hvis filen PARM ikke findes                */ 
 /*                          Member navn laves med ligningsår = *    */ 
 /*                       ellers                                     */ 
 /*                          Member navn laves med ligningsår = PARM */ 
 /*                                                                  */ 
 /* Output:      IND132 - Individstruktur for DXC Individ 132        */ 
 /*              IND135 - Individstruktur for DXC Individ 135        */ 
 /*                                                                  */ 
 /*              POS132 - Positionstabel for DXC individ 132         */ 
 /*              POS135 - Positionstabel for DXC individ 135         */ 
 /*                                                                  */ 
 /*              BIT132 - Bitstruktur for DXC Individ 132            */ 
 /*              BIT135 - Bitstruktur for DXC Individ 135            */ 
 /*                                                                  */ 
 /*------------------------------------------------------------------*/ 
 /*                                                                  */ 
 /* 2019.12.01  Edward Laryea, EDL                                   */ 
 /*                                                                  */ 
 /*                                                                  */ 
 /*                                                                  */ 
 /*                                                                  */ 
 /* 2021 April  Ole Nielsen                                          */ 
 /*                                                                  */ 
 /*     KILDEPROCEKOD har 11 forekomster. Første er uden nummer på   */ 
 /*     Diverse fejlnumre har 10 forekosmter og starter med nummer 1 */ 
 /*                                                                  */ 
 /*     ARRAY_NR ændret fra picture 1 til 2                          */ 
 /*     så plads til nummer 10 og 11                                 */ 
 /*                                                                  */ 
 /*     Ændret så abend når ARRAY_CNT(IX) > 11                       */ 
 /*                                                                  */ 
 /*     DAN_TAB_FELT proceduren rettet ved 10 forekosmter og         */ 
 /*     tilføjet håndtering af 11 forekomster.                       */ 
 /*     Tilføjet ARRAY_NR_KORT picture 1, da vi gerne vil have       */ 
 /*     at nummeret står lige efter navnet uden mellemrum eller 0    */ 
 /*     eks.: KILDEPROCEKOD8                                         */ 
 /*     Tilføjet ARRAY_NR_LANG picture 2 så vi får                   */ 
 /*     eks.: KILDEPROCEKOD10                                        */ 
 /*                                                                  */ 
 /*     Hvorved vi får:                                              */ 
 /*     KILDEPROCEKOD, KILDEPROCEKOD1,,,,,KILDEPROCEKOD10            */ 
 /*     FEJLNR1,,,,,FEJLNR10                                         */ 
 /********************************************************************/ 
                                                                        
 /********************************************************************/ 
 /* Builtin functions                                                */ 
 /********************************************************************/ 
 DCL ADDR              BUILTIN;                                         
 DCL NULL              BUILTIN;                                         
 DCL PLIDUMP           BUILTIN;                                         
 DCL TIMESTAMP         BUILTIN;                                         
                                                                        
 /********************************************************************/ 
 /* Input - Individ struktur 132 & 135 modtaget fra DXC    */           
 /********************************************************************/ 
 DCL INP132            FILE RECORD INPUT;                               
 DCL INP132_AREA       CHAR(80);                                        
                                                                        
 DCL INP135            FILE RECORD INPUT;                               
 DCL INP135_AREA       CHAR(80);                                        
                                                                        
 DCL INP_REC_X         CHAR(80);                                        
 DCL 1 INP_REC     BASED(ADDR(INP_REC_X)),                              
       3 INP_FELT      CHAR(18),                                        
       3 INP_FILLER01  CHAR(01),                                        
       3 INP_TYPE      CHAR(04),                                        
       3 INP_FILLER02  CHAR(13),                                        
       3 INP_LGT       CHAR(04),                                        
       3 INP_FILLER03  CHAR(01),                                        
       3 INP_KOMM      CHAR(26),                                        
       3 INP_FILLER04  CHAR(13);                                        
                                                                        
 DCL TAB_CNT           PIC'(4)9'      INIT(0);                          
 DCL TAB_MAX           PIC'(4)9'      INIT(2600);                       
 DCL 1 TAB_FELTER(2600),                                                
       3 TAB_FELTNR    PIC'(4)9',                                       
       3 TAB_FELT      CHAR(19),                                        
       3 TAB_TYPE      CHAR(05),                                        
       3 TAB_TYPENR    PIC'(2)9',                                       
       3 TAB_START     PIC'(5)9',                                       
       3 TAB_LGTTYPE   CHAR(07),                                        
       3 TAB_LGT       PIC'(4)9',                                       
       3 TAB_KOMM      CHAR(26);                                        
                                                                        
 DCL ARRAY_IX          PIC'(4)9'      INIT(0);                          
 DCL 1 ARRAY_FELTER(2600),                                              
       3 ARRAY_FELT    CHAR(19),                                        
       3 ARRAY_CNT     PIC'(2)9',                                       
       3 ARRAY_NR      PIC'(2)9';                                       
                                                                        
 /********************************************************************/ 
 /* Input - PARM - Ligningsår til member navnene                     */ 
 /********************************************************************/ 
 DCL PARM              FILE RECORD INPUT;                               
 DCL 1 PARM_REC,                                                        
       3 PARM_AAR      CHAR(01),                                        
       3 PARM_FILLER   CHAR(79);                                        
                                                                        
                                                                        
 /********************************************************************/ 
 /* Output - Individ 132 & 135 PL/1 strukturer                       */ 
 /********************************************************************/ 
 DCL IND132            FILE RECORD OUTPUT;                              
 DCL IND132_AREA       CHAR(80);                                        
                                                                        
 DCL IND135            FILE RECORD OUTPUT;                              
 DCL IND135_AREA       CHAR(80);                                        
                                                                        
 DCL POS132            FILE RECORD OUTPUT;                              
 DCL POS132_AREA       CHAR(80);                                        
                                                                        
 DCL POS135            FILE RECORD OUTPUT;                              
 DCL POS135_AREA       CHAR(80);                                        
                                                                        
 DCL BIT132            FILE RECORD OUTPUT;                              
 DCL BIT132_AREA       CHAR(80);                                        
                                                                        
 DCL BIT135            FILE RECORD OUTPUT;                              
 DCL BIT135_AREA       CHAR(80);                                        
                                                                        
 DCL XLS131            FILE RECORD OUTPUT;                              
 DCL XLS131_AREA       CHAR(300);                                       
                                                                        
 DCL 1 IND_REC,                                                         
       3 IND_FILLER01  CHAR(04)       INIT(''),                         
       3 IND_FILLER02  CHAR(01)       INIT('4'),                        
       3 IND_FILLER03  CHAR(02)       INIT(''),                         
       3 IND_FELT      CHAR(19),                                        
       3 IND_FILLER04  CHAR(01)       INIT(''),                         
       3 IND_TYPE      CHAR(05),                                        
       3 IND_FILLER05  CHAR(01)       INIT(''),                         
       3 IND_LGT       CHAR(07),                                        
       3 IND_FILLER07  CHAR(04)       INIT(', /*'),                     
       3 IND_KOMM      CHAR(26),                                        
       3 IND_FILLER08  CHAR(02)       INIT('*/'),                       
       3 IND_FILLER09  CHAR(08)       INIT('');                         
                                                                        
 DCL 1 POS_REC,                                                         
       3 POS_FILLER01  CHAR(03)       INIT(''),                         
       3 POS_LEFT      CHAR(01)       INIT('('),                        
       3 POS_FILLER02  CHAR(01)       INIT("'"),                        
       3 POS_FELTNR    PIC'(4)9',                                       
       3 POS_FILLER03  CHAR(01)       INIT(''),                         
       3 POS_START     PIC'(5)9',                                       
       3 POS_FILLER04  CHAR(01)       INIT(''),                         
       3 POS_LGT       PIC'(4)9',                                       
       3 POS_FILLER05  CHAR(01)       INIT(''),                         
       3 POS_TYPENR    PIC'(2)9',                                       
       3 POS_FILLER06  CHAR(01)       INIT("'"),                        
       3 POS_RIGHT     CHAR(02)       INIT(', '),                       
       3 POS_FILLER07  CHAR(05)       INIT('  /* '),                    
       3 POS_FELT      CHAR(19),                                        
       3 POS_FILLER08  CHAR(20)       INIT(''),                         
       3 POS_FILLER09  CHAR(02)       INIT('*/'),                       
       3 POS_FILLER10  CHAR(08)       INIT('');                         
                                                                        
 DCL 1 BIT_REC,                                                         
       3 BIT_FILLER01  CHAR(07)       INIT('    4  '),                  
       3 BIT_FELT      CHAR(21),                                        
       3 BIT_FILLER02  CHAR(13)       INIT('   BIT (1),  '),            
       3 BIT_FILLER03  CHAR(03)       INIT('/* '),                      
       3 BIT_KOMM      CHAR(26),                                        
       3 BIT_FILLER04  CHAR(02)       INIT('*/'),                       
       3 BIT_FILLER05  CHAR(08)       INIT('');                         
                                                                        
 DCL 1 HEAD_STREG,                                                      
       3 HEAD_FILLER01 CHAR(02)       INIT(' /'),                       
       3 HEAD_FILLER02 CHAR(23)       INIT('***********************'),  
       3 HEAD_FILLER03 CHAR(23)       INIT('***********************'),  
       3 HEAD_FILLER04 CHAR(23)       INIT('***********************'),  
       3 HEAD_FILLER05 CHAR(01)       INIT('/'),                        
       3 HEAD_FILLER06 CHAR(08)       INIT('');                         
                                                                        
 DCL 1 HEAD_BLANK,                                                      
       3 HEAD_FILLER01 CHAR(03)       INIT(' /*'),                      
       3 HEAD_FILLER02 CHAR(67)       INIT(''),                         
       3 HEAD_FILLER03 CHAR(02)       INIT('*/'),                       
       3 HEAD_FILLER04 CHAR(08)       INIT('');                         
                                                                        
 DCL 1 HEAD_TMS,                                                        
       3 HEAD_FILLER01 CHAR(04)       INIT(' /* '),                     
       3 HEAD_FILLER02 CHAR(18)       INIT('Dannet af program '),       
       3 HEAD_FILLER03 CHAR(12)       INIT('BH98100 den '),             
       3 HEAD_DATO     CHAR(10)       INIT('dd-mm-åååå') ,              
       3 HEAD_FILLER04 CHAR(04)       INIT(' kl '),                     
       3 HEAD_TID      CHAR(08)       INIT('tt:mm:ss'),                 
       3 HEAD_FILLER07 CHAR(13)       INIT(''),                         
       3 HEAD_FILLER08 CHAR(03)       INIT(' */'),                      
       3 HEAD_FILLER09 CHAR(08)       INIT('');                         
                                                                        
 DCL 1 IND_HEAD,                                                        
       3 IND_FILLER01  CHAR(04)       INIT(' /* '),                     
       3 IND_FILLER02  CHAR(08)       INIT('Include '),                 
       3 IND_INCLUDE   CHAR(08)       INIT('BQ1*1**N'),                 
       3 IND_FILLER03  CHAR(03)       INIT(' - '),                      
       3 IND_FILLER04  CHAR(16)       INIT('Individstruktur '),         
       3 IND_FILLER05  CHAR(16)       INIT('for DXC Individ '),         
       3 IND_INDV      PIC'(3)9',                                       
       3 IND_FILLER06  CHAR(11)       INIT(''),                         
       3 IND_FILLER07  CHAR(03)       INIT(' */'),                      
       3 IND_FILLER08  CHAR(08)       INIT('');                         
                                                                        
 DCL 1 POS_HEAD,                                                        
       3 POS_FILLER01  CHAR(04)       INIT(' /* '),                     
       3 POS_FILLER02  CHAR(08)       INIT('Include '),                 
       3 POS_INCLUDE   CHAR(08)       INIT('BQ1*1**M'),                 
       3 POS_FILLER03  CHAR(03)       INIT(' - '),                      
       3 POS_FILLER04  CHAR(15)       INIT('Positionstabel '),          
       3 POS_FILLER05  CHAR(16)       INIT('for DXC Individ '),         
       3 POS_INDV      PIC'(3)9',                                       
       3 POS_FILLER06  CHAR(12)       INIT(''),                         
       3 POS_FILLER07  CHAR(03)       INIT(' */'),                      
       3 POS_FILLER08  CHAR(08)       INIT('');                         
                                                                        
 DCL 1 BIT_HEAD,                                                        
       3 BIT_FILLER01  CHAR(04)       INIT(' /* '),                     
       3 BIT_FILLER02  CHAR(08)       INIT('Include '),                 
       3 BIT_INCLUDE   CHAR(08)       INIT('BQ1*0**N'),                 
       3 BIT_FILLER03  CHAR(03)       INIT(' - '),                      
       3 BIT_FILLER04  CHAR(13)       INIT('BIT-struktur '),            
       3 BIT_FILLER05  CHAR(16)       INIT('for DXC Individ '),         
       3 BIT_INDV      PIC'(3)9',                                       
       3 BIT_FILLER06  CHAR(14)       INIT(''),                         
       3 BIT_FILLER07  CHAR(03)       INIT(' */'),                      
       3 BIT_FILLER08  CHAR(08)       INIT('');                         
                                                                        
                                                                        
 /********************************************************************/ 
 /* Interne arbejdsfelter                                            */ 
 /********************************************************************/ 
 DCL JA                BIT(01)        INIT('1'B);                       
 DCL NEJ               BIT(01)        INIT('0'B);                       
 DCL FLERE_INP132      BIT(01)        INIT('1'B);                       
 DCL FLERE_INP135      BIT(01)        INIT('1'B);                       
 DCL FELT_NOTFND       BIT(01)        INIT('1'B);                       
 DCL XLS_TAB_FOUND     BIT(01)        INIT('0'B);                       
 DCL DAN_XLS_JA        BIT(01)        INIT('0'B);                       
                                                                        
 DCL BEH_INDV          PIC'(3)9'      INIT(0);                          
 DCL INDV132           PIC'(3)9'      INIT(132);                        
 DCL INDV135           PIC'(3)9'      INIT(135);                        
 DCL BEH_INC_1         CHAR(08)       INIT('BQ90***M');                 
 DCL BEH_PGM_2         CHAR(07)       INIT('BQ90***');                  
 DCL BEH_INC_2         CHAR(08)       INIT('BQ90***N');                 
 DCL BEH_PGM_3         CHAR(07)       INIT('BQ90*00');                  
 DCL BEH_INC_3_132     CHAR(08)       INIT('BQ90100N');                 
 DCL BEH_INC_3_135     CHAR(08)       INIT('BQ90200N');                 
 DCL BEH_JN_3          CHAR(03)       INIT('Ja');                       
 DCL BEH_FELT_STAT     CHAR(19)       INIT('STAT (2600)');              
 DCL BEH_FELT_PNR      CHAR(19)       INIT('PNR');                      
 DCL BEH_FELT_INDKAAR  CHAR(19)       INIT('INDKAAR');                  
 DCL BEH_FELT_ANVDTO   CHAR(19)       INIT('ANVDTO');                   
 DCL BEH_FELT_DUMMYID  CHAR(19)       INIT('DUMMYID');                  
 DCL BEH_FELT_DINDKÅR  CHAR(19)       INIT('DINDKÅR');                  
                                                                        
 DCL ADD_2016          CHAR(08)       INIT('2016');                     
 DCL ADD_FOER_2017     CHAR(08)       INIT('Før 2017');                 
                                                                        
 DCL BEH_DUPLET_4_1    CHAR(19)       INIT('IFAENGAKAPSUMSKABLB');      
 DCL BEH_DUPLET_4_2    CHAR(19)       INIT('NGAKAPRSTSKABLB');          
 DCL BEH_DUPLET_4_3    CHAR(19)       INIT('NGAKAPSKAVAEBLB');          
 DCL BEH_DUPLET_4_4    CHAR(19)       INIT('NGAKAPSUMSKABLB');          
 DCL BEH_DUPLET_4_5    CHAR(19)       INIT('TAENGAKAPSUMSKABLB');       
 DCL BEH_DUPLET_4_6    CHAR(19)       INIT('UDLLPERSINDKFRDBLB');       
 DCL BEH_DUPLET_5_1    CHAR(19)       INIT('DKUDBUNOAKTBLB');           
 DCL BEH_DUPLET_6_1    CHAR(19)       INIT('SKACENAGTSKRKOD');          
 DCL BEH_DUPLET_6_2    CHAR(19)       INIT('UDSAEGNGAKAPSKAKOD');       
                                                                        
 DCL BEH_JA            CHAR(03)       INIT('Ja ');                      
 DCL BEH_NEJ           cHAR(03)       INIT('Nej');                      
 DCL BEH_NOTFND        CHAR(08)       INIT('Notfnd');                   
                                                                        
 DCL INP132_READ       PIC'(7)9'      INIT(0);                          
 DCL INP135_READ       PIC'(7)9'      INIT(0);                          
                                                                        
 DCL IND132_WRITE      PIC'(7)9'      INIT(0);                          
 DCL IND135_WRITE      PIC'(7)9'      INIT(0);                          
                                                                        
 DCL POS132_WRITE      PIC'(7)9'      INIT(0);                          
 DCL POS135_WRITE      PIC'(7)9'      INIT(0);                          
                                                                        
 DCL BIT132_WRITE      PIC'(7)9'      INIT(0);                          
 DCL BIT135_WRITE      PIC'(7)9'      INIT(0);                          
                                                                        
                                                                        
 DCL DISP_CNT_1        PIC'Z.ZZZ.ZZ9';                                  
 DCL DISP_CNT_2        PIC'Z.ZZZ.ZZ9';                                  
 DCL DISP_CNT_3        PIC'Z.ZZZ.ZZ9';                                  
 DCL DISP_CNT_4        PIC'Z.ZZZ.ZZ9';                                  
 DCL DISP_CNT_5        PIC'Z.ZZZ.ZZ9';                                  
                                                                        
 DCL IX                PIC'(4)9'      INIT(0);                          
 DCL IY                PIC'(4)9'      INIT(0);                          
 DCL IZ                PIC'(4)9'      INIT(0);                          
                                                                        
 DCL TMS               CHAR(26);                                        
 DCL TMS_DATO          CHAR(10);                                        
 DCL TMS_TID           CHAR(08);                                        
                                                                        
 /********************************************************************/ 
 /* Standard rutiner                                                 */ 
 /********************************************************************/ 
 DCL   ZS30101         ENTRY;          /* Abendrutine                */ 
                                                                        
 DCL 1 ABEND_MEDDEL,                                                    
       2 ABEND_MODUL   CHAR(07) INIT('BH98100'),                        
       2 ABEND_FILL1   CHAR(01) INIT(' '),                              
       2 ABEND_MEDNR   CHAR(02) INIT('**'),                             
       2 ABEND_FILL2   CHAR(01) INIT(' '),                              
       2 ABEND_FEJLNR  CHAR(03) INIT(' '),                              
       2 ABEND_FILL3   CHAR(01) INIT(' '),                              
       2 ABEND_TXT     CHAR(41) INIT('');                               
                                                                        
 DCL  SYSPRINT FILE;                                                    
                                                                        
 /********************************************************************/ 
 /* On Conditions                                                    */ 
 /********************************************************************/ 
 ON ENDFILE(INP132) BEGIN;                                              
   FLERE_INP132 = NEJ;                                                  
 END;                                                                   
                                                                        
 ON ENDFILE(INP135) BEGIN;                                              
   FLERE_INP135 = NEJ;                                                  
 END;                                                                   
                                                                        
 /********************************************************************/ 
 /* Main proces                                                      */ 
 /********************************************************************/ 
 CALL HOUSEKEEPING;                                                     
                                                                        
 CALL BEH_INP132;                                                       
 CALL BEH_INP135;                                                       
                                                                        
 CALL AFSLUT;                                                           
                                                                        
 /********************************************************************/ 
 /* Housekeeping                                                     */ 
 /********************************************************************/ 
 HOUSEKEEPING: PROC;                                                    
                                                                        
 PUT SKIP LIST('Program BH98100 startet');                              
 PUT SKIP LIST('');                                                     
                                                                        
 TMS                   = TIMESTAMP;                                     
 SUBSTR(TMS_DATO,01,2) = SUBSTR(TMS,09,2);                              
 SUBSTR(TMS_DATO,03,1) = '-';                                           
 SUBSTR(TMS_DATO,04,2) = SUBSTR(TMS,06,2);                              
 SUBSTR(TMS_DATO,06,1) = '-';                                           
 SUBSTR(TMS_DATO,07,4) = SUBSTR(TMS,01,4);                              
                                                                        
 SUBSTR(TMS_TID,01,2)  = SUBSTR(TMS,12,2);                              
 SUBSTR(TMS_TID,03,1)  = ':';                                           
 SUBSTR(TMS_TID,04,2)  = SUBSTR(TMS,15,2);                              
 SUBSTR(TMS_TID,06,1)  = ':';                                           
 SUBSTR(TMS_TID,07,2)  = SUBSTR(TMS,18,2);                              
                                                                        
 HEAD_DATO             = TMS_DATO;                                      
 HEAD_TID              = TMS_TID;                                       
                                                                        
 OPEN FILE(INP132) TITLE('BHINP32I');                                   
 OPEN FILE(INP135) TITLE('BHINP35I');                                   
                                                                        
 OPEN FILE(IND132) TITLE('BHIND32O');                                   
 OPEN FILE(IND135) TITLE('BHIND35O');                                   
                                                                        
 OPEN FILE(POS132) TITLE('BHPOS32O');                                   
 OPEN FILE(POS135) TITLE('BHPOS35O');                                   
                                                                        
 OPEN FILE(BIT132) TITLE('BHBIT32O');                                   
 OPEN FILE(BIT135) TITLE('BHBIT35O');                                   
                                                                        
                                                                        
 PARM_AAR = '*';                                                        
                                                                        
 ON UNDEFINEDFILE(PARM) BEGIN;                                          
   GO TO HOUSEKEEPING_SLUT;                                             
 END;                                                                   
                                                                        
 OPEN FILE(PARM) TITLE('PARM');                                         
                                                                        
 ON ENDFILE(PARM) BEGIN;                                                
   GO TO HOUSEKEEPING_SLUT;                                             
 END;                                                                   
                                                                        
 READ FILE(PARM) INTO(PARM_REC);                                        
                                                                        
 /*------------------------------------------------------------------*/ 
 /* HOUSEKEEPING_SLUT                                                */ 
 /*------------------------------------------------------------------*/ 
 HOUSEKEEPING_SLUT:                                                     
                                                                        
 END HOUSEKEEPING;                                                      
                                                                        
 /********************************************************************/ 
 /* Dan PL/1 struktur til individ 132                                */ 
 /********************************************************************/ 
 BEH_INP132: PROC;                                                      
                                                                        
 BEH_INDV = 132;                                                        
                                                                        
 PUT SKIP LIST('*** BEH_INP132 - Startet (' !! BEH_INDV !! ') ***');    
 PUT SKIP LIST('');                                                     
                                                                        
 CALL INIT_TAB;                                                         
                                                                        
 READ FILE(INP132) INTO(INP_REC_X);                                     
                                                                        
 DO WHILE(FLERE_INP132);                                                
    INP132_READ = INP132_READ + 1;                                      
                                                                        
    IF SUBSTR(INP_FELT,1,1) ^= '*'                                      
    THEN                                                                
      DO;                                                               
        CALL UDFYLD_TAB;                                                
        CALL UDFYLD_ARRAY;                                              
      END;                                                              
                                                                        
    READ FILE(INP132) INTO(INP_REC_X);                                  
 END;                                                                   
                                                                        
 IX = 0;                                                                
 DO WHILE(IX < TAB_CNT);                                                
    IX = IX + 1;                                                        
                                                                        
    CALL DAN_OUTPUT;                                                    
                                                                        
    IF IX = 1                                                           
    THEN                                                                
      DO;                                                               
           WRITE FILE(IND132) FROM(HEAD_STREG);                         
           WRITE FILE(IND132) FROM(IND_HEAD);                           
           WRITE FILE(IND132) FROM(HEAD_BLANK);                         
           WRITE FILE(IND132) FROM(HEAD_TMS);                           
           WRITE FILE(IND132) FROM(HEAD_STREG);                         
           IND132_WRITE = IND132_WRITE + 5;                             
                                                                        
           WRITE FILE(POS132) FROM(HEAD_STREG);                         
           WRITE FILE(POS132) FROM(POS_HEAD);                           
           WRITE FILE(POS132) FROM(HEAD_BLANK);                         
           WRITE FILE(POS132) FROM(HEAD_TMS);                           
           WRITE FILE(POS132) FROM(HEAD_STREG);                         
           POS132_WRITE = POS132_WRITE + 5;                             
                                                                        
           WRITE FILE(BIT132) FROM(HEAD_STREG);                         
           WRITE FILE(BIT132) FROM(BIT_HEAD);                           
           WRITE FILE(BIT132) FROM(HEAD_BLANK);                         
           WRITE FILE(BIT132) FROM(HEAD_TMS);                           
           WRITE FILE(BIT132) FROM(HEAD_STREG);                         
           BIT132_WRITE = BIT132_WRITE + 5;                             
      END;                                                              
                                                                        
    WRITE FILE(IND132) FROM(IND_REC);                                   
    IND132_WRITE = IND132_WRITE + 1;                                    
                                                                        
    WRITE FILE(POS132) FROM(POS_REC);                                   
    POS132_WRITE = POS132_WRITE + 1;                                    
                                                                        
    IF IX > 1                                                           
    THEN                                                                
      DO;                                                               
        WRITE FILE(BIT132) FROM(BIT_REC);                               
        BIT132_WRITE = BIT132_WRITE + 1;                                
      END;                                                              
 END;                                                                   
                                                                        
 PUT SKIP LIST('*** BEH_INP132 - Sluttet (' !! BEH_INDV !! ') ***');    
 PUT SKIP LIST('');                                                     
                                                                        
 END BEH_INP132;                                                        
                                                                        
 /********************************************************************/ 
 /* Dan PL/1 struktur til individ 135                                */ 
 /********************************************************************/ 
 BEH_INP135: PROC;                                                      
                                                                        
 BEH_INDV = 135;                                                        
                                                                        
 PUT SKIP LIST('*** BEH_INP135 - Startet (' !! BEH_INDV !! ') ***');    
 PUT SKIP LIST('');                                                     
                                                                        
 CALL INIT_TAB;                                                         
                                                                        
 READ FILE(INP135) INTO(INP_REC_X);                                     
                                                                        
 DO WHILE(FLERE_INP135);                                                
    INP135_READ = INP135_READ + 1;                                      
                                                                        
    IF SUBSTR(INP_FELT,1,1) ^= '*' THEN DO;                             
       CALL UDFYLD_TAB;                                                 
       CALL UDFYLD_ARRAY;                                               
    END;                                                                
                                                                        
    READ FILE(INP135) INTO(INP_REC_X);                                  
 END;                                                                   
                                                                        
 IX = 0;                                                                
 DO WHILE(IX < TAB_CNT);                                                
    IX = IX + 1;                                                        
                                                                        
    CALL DAN_OUTPUT;                                                    
                                                                        
    IF IX = 1 THEN DO;                                                  
       WRITE FILE(IND135) FROM(HEAD_STREG);                             
       WRITE FILE(IND135) FROM(IND_HEAD);                               
       WRITE FILE(IND135) FROM(HEAD_BLANK);                             
       WRITE FILE(IND135) FROM(HEAD_TMS);                               
       WRITE FILE(IND135) FROM(HEAD_STREG);                             
       IND135_WRITE = IND135_WRITE + 5;                                 
                                                                        
       WRITE FILE(POS135) FROM(HEAD_STREG);                             
       WRITE FILE(POS135) FROM(POS_HEAD);                               
       WRITE FILE(POS135) FROM(HEAD_BLANK);                             
       WRITE FILE(POS135) FROM(HEAD_TMS);                               
       WRITE FILE(POS135) FROM(HEAD_STREG);                             
       POS135_WRITE = POS135_WRITE + 5;                                 
                                                                        
       WRITE FILE(BIT135) FROM(HEAD_STREG);                             
       WRITE FILE(BIT135) FROM(BIT_HEAD);                               
       WRITE FILE(BIT135) FROM(HEAD_BLANK);                             
       WRITE FILE(BIT135) FROM(HEAD_TMS);                               
       WRITE FILE(BIT135) FROM(HEAD_STREG);                             
       BIT135_WRITE = BIT135_WRITE + 5;                                 
    END;                                                                
                                                                        
    WRITE FILE(IND135) FROM(IND_REC);                                   
    IND135_WRITE = IND135_WRITE + 1;                                    
                                                                        
    WRITE FILE(POS135) FROM(POS_REC);                                   
    POS135_WRITE = POS135_WRITE + 1;                                    
                                                                        
    IF IX > 1 THEN DO;                                                  
       WRITE FILE(BIT135) FROM(BIT_REC);                                
       BIT135_WRITE = BIT135_WRITE + 1;                                 
    END;                                                                
 END;                                                                   
                                                                        
 PUT SKIP LIST('*** BEH_INP135 - Sluttet (' !! BEH_INDV !! ') ***');    
 PUT SKIP LIST('');                                                     
                                                                        
 END BEH_INP135;                                                        
                                                                        
 /********************************************************************/ 
 /* Initier tabel TAB_FELT                                           */ 
 /********************************************************************/ 
 INIT_TAB: PROC;                                                        
                                                                        
 TAB_FELTNR(*)  = 0;                                                    
 TAB_FELT(*)    = '';                                                   
 TAB_TYPE(*)    = '';                                                   
 TAB_TYPENR(*)  = 0;                                                    
 TAB_START(*)   = 0;                                                    
 TAB_LGTTYPE(*) = '';                                                   
 TAB_LGT(*)     = 0;                                                    
 TAB_KOMM(*)    = '';                                                   
                                                                        
 TAB_CNT       = 1;                                                     
 TAB_FELTNR(1) = 1;                                                     
                                                                        
 SUBSTR(TAB_FELT(1),1,6)  = 'STAT (';                                   
 SUBSTR(TAB_FELT(1),7,4)  = TAB_MAX;                                    
 SUBSTR(TAB_FELT(1),11,1) = ')';                                        
                                                                        
 TAB_TYPE(1)    = 'BIT';                                                
 TAB_TYPENR(1)  = '25';                                                 
 TAB_START(1)   = 1;                                                    
 TAB_LGTTYPE(1) = '    (1)';                                            
 TAB_LGT(1)     = TAB_MAX/8;                                            
 TAB_KOMM(1)    = 'Bitmark felt benyttet      ';                        
                                                                        
 ARRAY_FELT(*) = '';                                                    
 ARRAY_CNT(*)  = 0;                                                     
 ARRAY_NR(*)   = 0;                                                     
 ARRAY_IX      = 0;                                                     
                                                                        
 IND_INDV                = BEH_INDV;                                    
 POS_INDV                = BEH_INDV;                                    
 BIT_INDV                = BEH_INDV;                                    
 SUBSTR(IND_INCLUDE,4,1) = SUBSTR(PARM_AAR,1,1);                        
 SUBSTR(IND_INCLUDE,6,2) = SUBSTR(IND_INDV,2,2);                        
 SUBSTR(POS_INCLUDE,4,1) = SUBSTR(PARM_AAR,1,1);                        
 SUBSTR(POS_INCLUDE,6,2) = SUBSTR(POS_INDV,2,2);                        
 SUBSTR(BIT_INCLUDE,4,1) = SUBSTR(PARM_AAR,1,1);                        
 SUBSTR(BIT_INCLUDE,6,2) = SUBSTR(BIT_INDV,2,2);                        
                                                                        
 DAN_XLS_JA = NEJ;                                                      
 BEH_INC_1  = '';                                                       
 BEH_PGM_2  = '';                                                       
 BEH_INC_2  = '';                                                       
                                                                        
                                                                        
 END INIT_TAB;                                                          
                                                                        
 /********************************************************************/ 
 /* Udfyld tabel TAB_FELTER med værdier fra INP_REC                  */ 
 /********************************************************************/ 
 UDFYLD_TAB: PROC;                                                      
                                                                        
 TAB_CNT = TAB_CNT + 1;                                                 
 IF TAB_CNT > TAB_MAX THEN DO;                                          
     ABEND_FEJLNR = '101';                                              
     ABEND_TXT    = 'Array i bitmarkfeltet STAT skal udvides';          
     CALL PROGRAM_FEJL;                                                 
 END;                                                                   
                                                                        
 TAB_FELTNR(TAB_CNT) = TAB_CNT;                                         
 TAB_KOMM(TAB_CNT)   = INP_KOMM;                                        
                                                                        
 /*------------------------------------------------------------------*/ 
 /* TAB_FELT                                                         */ 
 /*------------------------------------------------------------------*/ 
 SELECT(INP_FELT);                                                      
    WHEN('OMFFTRSELVKOD')    TAB_FELT(TAB_CNT) = 'OMFFTRSELVKOD1';      
    WHEN('OMFFTRSELVDTAKOD') TAB_FELT(TAB_CNT) = 'OMFFTRSELVDTAKOD1';   
    WHEN('TDELTSELVTYPEKOD') TAB_FELT(TAB_CNT) = 'TDELTSELVTYPEKOD1';   
    OTHERWISE                TAB_FELT(TAB_CNT) = INP_FELT;              
 END;                                                                   
                                                                        
 /*------------------------------------------------------------------*/ 
 /* TAB_TYPE, TAB_LGTTYPE & TAB_TYPENR                               */ 
 /*------------------------------------------------------------------*/ 
 SELECT(INP_TYPE);                                                      
    WHEN('TIME') DO;                                                    
       TAB_TYPE(TAB_CNT)    = 'CHAR';                                   
       TAB_LGTTYPE(TAB_CNT) = '   (26)';                                
       TAB_TYPENR(TAB_CNT)  = 22;                                       
    END;                                                                
                                                                        
    WHEN('DATE') DO;                                                    
       TAB_TYPE(TAB_CNT)    = 'CHAR';                                   
       TAB_LGTTYPE(TAB_CNT) = '    (8)';                                
       TAB_TYPENR(TAB_CNT)  = 8;                                        
    END;                                                                
                                                                        
    WHEN('CHAR') DO;                                                    
       SELECT(INP_FELT);                                                
          WHEN('AFVISTGODKENDKOD'                                       
              ,'GENERATYPEKOD',                                         
              'ALMOPGOEKOD',                                            
              'BOBHAKOD') DO;                                           
             TAB_TYPE(TAB_CNT)                = 'CHAR';                 
             TAB_LGTTYPE(TAB_CNT)             = '    (1)';              
             TAB_TYPENR(TAB_CNT)              = 1;                      
          END;                                                          
                                                                        
          WHEN('EJDBLIGEADR') DO;                                       
             TAB_TYPE(TAB_CNT)                = 'CHAR';                 
             TAB_LGTTYPE(TAB_CNT)             = '   (32)';              
             TAB_TYPENR(TAB_CNT)              = 31;                     
          END;                                                          
                                                                        
          WHEN('FSKUDRESKAMDKOD') DO;                                   
             TAB_TYPE(TAB_CNT)                = 'CHAR';                 
             TAB_LGTTYPE(TAB_CNT)             = '    (2)';              
             TAB_TYPENR(TAB_CNT)              = 2;                      
          END;                                                          
                                                                        
          OTHERWISE DO;                                                 
             TAB_TYPE(TAB_CNT)   = 'CHAR';                              
             CALL DAN_TAB_LGTTYPE;                                      
             CALL DAN_TAB_TYPENR;                                       
          END;                                                          
       END;                                                             
    END;                                                                
                                                                        
    WHEN('DECI') DO;                                                    
       SELECT(INP_FELT);                                                
          WHEN('INDVNR'                                                 
              ,'INDKAAR') DO;                                           
             TAB_TYPE(TAB_CNT)                = 'PIC';                  
             SUBSTR(TAB_LGTTYPE(TAB_CNT),2,1) = "'";                    
             SUBSTR(TAB_LGTTYPE(TAB_CNT),3,4) = '(4)9';                 
             SUBSTR(TAB_LGTTYPE(TAB_CNT),7,1) = "'";                    
             TAB_TYPENR(TAB_CNT)              = 18;                     
          END;                                                          
                                                                        
          WHEN('PNR','ENR') DO;                                         
             TAB_TYPE(TAB_CNT)                = 'PIC';                  
             SUBSTR(TAB_LGTTYPE(TAB_CNT),1,1) = "'";                    
             SUBSTR(TAB_LGTTYPE(TAB_CNT),2,5) = '(10)9';                
             SUBSTR(TAB_LGTTYPE(TAB_CNT),7,1) = "'";                    
             TAB_TYPENR(TAB_CNT)              = 26;                     
          END;                                                          
                                                                        
          WHEN('KIRKEDAGANT'                                            
              ,'MULTIMDANT'                                             
              ,'SKPLKVTANT'                                             
              ,'SKPLMDANT'                                              
              ,'FSENTDAGANT'                                            
              ,'SKPLDAGANT'                                             
              ,'DISEJFRDDAGANT'                                         
              ,'DISUDRDAGANT'                                           
              ,'SOEUDRFARDAGANT'                                        
              ,'EJV2FAMILNR'                                            
              ,'EJVLBNR'                                                
              ,'EJDBLIGEKMNR'                                           
              ,'EJVERHANDDAGANT'                                        
              ,'ERHAARDAGANT'                                           
              ,'UBEBODAGANT'                                            
              ,'UDLEJBOLDAGANT'                                         
              ,'UDLEJDAGANT'                                            
              ,'EGEEJERDAGANT'                                          
              ,'EJBEBODAGANT'                                           
              ,'EJEREJDDAGANT'                                          
              ,'EJERDAGANT'                                             
              ,'EJEJEREJDDAGANT')                                       
             DO;                                                        
             TAB_TYPE(TAB_CNT)                = 'FIXED';                
             TAB_LGTTYPE(TAB_CNT)             = '    (3)';              
             TAB_TYPENR(TAB_CNT)              = 21;                     
          END;                                                          
                                                                        
          WHEN('EKSJOBFRDKVTANT','EJVPENSINDKBLB') DO;                  
             TAB_TYPE(TAB_CNT)                = 'FIXED';                
             TAB_LGTTYPE(TAB_CNT)             = ' (13,2)';              
             TAB_TYPENR(TAB_CNT)              = 15;                     
          END;                                                          
                                                                        
          WHEN('MYNDNR'                                                 
              ,'BOPAESKATKMNR'                                          
              ,'ADRAFSEDKMNR'                                           
              ,'AEGTIBERTKMNR'                                          
              ,'AENDRNR'                                                
              ,'ALMINDKOPGOENR'                                         
              ,'LIGNMYNDNR'                                             
              ,'SKATKMNR'                                               
              ,'SLUTBUNKENR'                                            
              ,'SLUTKMNR'                                               
              ,'AENSKACENNR'                                            
              ,'AENSKATKMNR'                                            
              ,'IBERTKMNR'                                              
              ,'IBERTSKACENNR'                                          
              ,'OMRAARLGDANT'                                           
              ,'OMRPERLGDANT'                                           
              ,'SKATANDELKVT1KMNR'                                      
              ,'SKATANDELKVT2KMNR'                                      
              ,'SKATANDELKVT3KMNR'                                      
              ,'SKATANDELKVT4KMNR','LJLIHANT'                           
              ,'VURMARKOD'                                              
              ,'VURMAR2001KOD'                                          
              ,'VURMAR2002KOD'                                          
              ,'JURKATID'                                               
              ,'JURUNDKATID'                                            
              ,'VURDEAAR'                                               
              ,'JURKAT2001ID'                                           
              ,'JURKAT2002ID'                                           
              ,'JURUNDKAT2001ID'                                        
              ,'JURUNDKAT2002ID') DO;                                   
             TAB_TYPE(TAB_CNT)                = 'FIXED';                
             TAB_LGTTYPE(TAB_CNT)             = '    (5)';              
             TAB_TYPENR(TAB_CNT)              = 20;                     
          END;                                                          
                                                                        
          WHEN('PERSKANSLFATANT') DO;                                   
             TAB_TYPE(TAB_CNT)                = 'FIXED';                
             TAB_LGTTYPE(TAB_CNT)             = ' (13,7)';              
             TAB_TYPENR(TAB_CNT)              = 30;                     
          END;                                                          
                                                                        
          WHEN('BOPAEKMNR') DO;                                         
             TAB_TYPE(TAB_CNT)                = 'CHAR';                 
             TAB_LGTTYPE(TAB_CNT)             = '    (3)';              
             TAB_TYPENR(TAB_CNT)              = 3;                      
          END;                                                          
                                                                        
          OTHERWISE DO;                                                 
             TAB_TYPE(TAB_CNT) = 'FIXED';                               
             CALL DAN_TAB_LGTTYPE;                                      
             CALL DAN_TAB_TYPENR;                                       
          END;                                                          
       END;                                                             
    END;                                                                
                                                                        
    OTHERWISE ;                                                         
 END;                                                                   
                                                                        
 /*------------------------------------------------------------------*/ 
 /* TAB_START & TAB_LGT                                              */ 
 /*------------------------------------------------------------------*/ 
 SELECT;                                                                
   WHEN(TAB_CNT = 1) TAB_START(TAB_CNT) = 1;                            
   OTHERWISE         TAB_START(TAB_CNT) =                               
                     TAB_START(TAB_CNT - 1) + TAB_LGT(TAB_CNT - 1);     
 END;                                                                   
                                                                        
 SELECT (TAB_TYPENR(TAB_CNT));                                          
    WHEN(01)  TAB_LGT(TAB_CNT) =   1;                                   
    WHEN(02)  TAB_LGT(TAB_CNT) =   2;                                   
    WHEN(03)  TAB_LGT(TAB_CNT) =   3;                                   
    WHEN(04)  TAB_LGT(TAB_CNT) =   4;                                   
    WHEN(05)  TAB_LGT(TAB_CNT) =   5;                                   
    WHEN(06)  TAB_LGT(TAB_CNT) =   6;                                   
    WHEN(07)  TAB_LGT(TAB_CNT) =   7;                                   
    WHEN(08)  TAB_LGT(TAB_CNT) =   8;                                   
    WHEN(09)  TAB_LGT(TAB_CNT) =   9;                                   
    WHEN(10)  TAB_LGT(TAB_CNT) =  10;                                   
    WHEN(11)  TAB_LGT(TAB_CNT) =  14;                                   
    WHEN(12)  TAB_LGT(TAB_CNT) =  15;                                   
    WHEN(13)  TAB_LGT(TAB_CNT) =  16;                                   
    WHEN(14)  TAB_LGT(TAB_CNT) =  30;                                   
    WHEN(15)  TAB_LGT(TAB_CNT) =   7;                                   
    WHEN(16)  TAB_LGT(TAB_CNT) =   3;                                   
    WHEN(17)  TAB_LGT(TAB_CNT) =   6;                                   
    WHEN(18)  TAB_LGT(TAB_CNT) =   4;                                   
    WHEN(19)  TAB_LGT(TAB_CNT) = 125;                                   
    WHEN(20)  TAB_LGT(TAB_CNT) =   3;                                   
    WHEN(21)  TAB_LGT(TAB_CNT) =   2;                                   
    WHEN(22)  TAB_LGT(TAB_CNT) =  26;                                   
    WHEN(23)  TAB_LGT(TAB_CNT) =   6;                                   
    WHEN(24)  TAB_LGT(TAB_CNT) =   1;                                   
    WHEN(25)  TAB_LGT(TAB_CNT) = 303;                                   
    WHEN(26)  TAB_LGT(TAB_CNT) =  10;                                   
    WHEN(27)  TAB_LGT(TAB_CNT) =   3;                                   
    WHEN(28)  TAB_LGT(TAB_CNT) =   4;                                   
    WHEN(29)  TAB_LGT(TAB_CNT) =  34;                                   
    WHEN(30)  TAB_LGT(TAB_CNT) =   7;                                   
    WHEN(31)  TAB_LGT(TAB_CNT) =  32;                                   
    OTHERWISE ;                                                         
 END;                                                                   
                                                                        
 /*------------------------------------------------------------------*/ 
 /* PUT SKIP                                                         */ 
 /*------------------------------------------------------------------*/ 
 IF TAB_CNT = 2 THEN DO;                                                
    PUT SKIP LIST('TAB' !! BEH_INDV !! '(0001): '                       
                  !! TAB_FELTNR(1)  !! ' '                              
                  !! TAB_FELT(1)    !! ' '                              
                  !! TAB_TYPE(1)    !! ' '                              
                  !! TAB_TYPENR(1)  !! ' '                              
                  !! TAB_START(1)   !! ' '                              
                  !! TAB_LGTTYPE(1) !! ' '                              
                  !! TAB_LGT(1)           );                            
 END;                                                                   
                                                                        
 PUT SKIP LIST('INP' !! BEH_INDV !! '(' !! TAB_CNT !! '): '             
               !! INP_FELT !! ' '                                       
               !! INP_TYPE !! ' '                                       
               !! INP_LGT  !! ' '                                       
               !! INP_KOMM       );                                     
                                                                        
 PUT SKIP LIST('TAB' !! BEH_INDV !! '(' !! TAB_CNT !! '): '             
               !! TAB_FELTNR(TAB_CNT)  !! ' '                           
               !! TAB_FELT(TAB_CNT)    !! ' '                           
               !! TAB_TYPE(TAB_CNT)    !! ' '                           
               !! TAB_TYPENR(TAB_CNT)  !! ' '                           
               !! TAB_START(TAB_CNT)   !! ' '                           
               !! TAB_LGTTYPE(TAB_CNT) !! ' '                           
               !! TAB_LGT(TAB_CNT)           );                         
                                                                        
 END UDFYLD_TAB;                                                        
                                                                        
 /********************************************************************/ 
 /* TAB_LGTTYPE = INP_LGT konverteret                                */ 
 /********************************************************************/ 
 DAN_TAB_LGTTYPE: PROC;                                                 
                                                                        
 SUBSTR(TAB_LGTTYPE(TAB_CNT),3,4) = INP_LGT;                            
 SUBSTR(TAB_LGTTYPE(TAB_CNT),7,1) = ')';                                
                                                                        
 IX = 6;                                                                
                                                                        
 DO WHILE(IX > 1);                                                      
    IX = IX - 1;                                                        
                                                                        
    IF SUBSTR(TAB_LGTTYPE(TAB_CNT),IX,1) = '' THEN DO;                  
       SUBSTR(TAB_LGTTYPE(TAB_CNT),IX,1) = '(';                         
       IX                                = 0;                           
    END;                                                                
                                                                        
    IF SUBSTR(TAB_LGTTYPE(TAB_CNT),IX,1) = '.' THEN DO;                 
       SUBSTR(TAB_LGTTYPE(TAB_CNT),IX,1) = ',';                         
    END;                                                                
 END;                                                                   
                                                                        
 SELECT(TAB_LGTTYPE(TAB_CNT));                                          
    WHEN('  (3,2)') TAB_LGTTYPE(TAB_CNT) = '  (5,2)';                   
    WHEN(' (11,2)') TAB_LGTTYPE(TAB_CNT) = ' (13,2)';                   
    OTHERWISE       ;                                                   
 END;                                                                   
                                                                        
 END DAN_TAB_LGTTYPE;                                                   
                                                                        
 /********************************************************************/ 
 /* TAB_TYPENR dannes udfra værdierne i TAB_TYPE og TAB_LGTTYPE      */ 
 /********************************************************************/ 
 DAN_TAB_TYPENR: PROC;                                                  
                                                                        
 SELECT(TAB_TYPE(TAB_CNT));                                             
   WHEN('CHAR') DO;                                                     
     SELECT(TAB_LGTTYPE(TAB_CNT));                                      
       WHEN('    (1)') TAB_TYPENR(TAB_CNT) = 1;                         
       WHEN('    (2)') TAB_TYPENR(TAB_CNT) = 2;                         
       WHEN('    (3)') TAB_TYPENR(TAB_CNT) = 3;                         
       WHEN('    (4)') TAB_TYPENR(TAB_CNT) = 4;                         
       WHEN('    (5)') TAB_TYPENR(TAB_CNT) = 5;                         
       WHEN('    (6)') TAB_TYPENR(TAB_CNT) = 6;                         
       WHEN('    (7)') TAB_TYPENR(TAB_CNT) = 7;                         
       WHEN('    (8)') TAB_TYPENR(TAB_CNT) = 8;                         
       WHEN('    (9)') TAB_TYPENR(TAB_CNT) = 9;                         
       WHEN('   (10)') TAB_TYPENR(TAB_CNT) = 10;                        
       WHEN('   (14)') TAB_TYPENR(TAB_CNT) = 11;                        
       WHEN('   (15)') TAB_TYPENR(TAB_CNT) = 12;                        
       WHEN('   (16)') TAB_TYPENR(TAB_CNT) = 13;                        
       WHEN('   (30)') TAB_TYPENR(TAB_CNT) = 14;                        
       WHEN('  (125)') TAB_TYPENR(TAB_CNT) = 19;                        
       WHEN('   (26)') TAB_TYPENR(TAB_CNT) = 22;                        
       WHEN('   (34)') TAB_TYPENR(TAB_CNT) = 29;                        
       OTHERWISE ;                                                      
     END;                                                               
   END;                                                                 
                                                                        
   WHEN('FIXED') DO;                                                    
     SELECT(TAB_LGTTYPE(TAB_CNT));                                      
       WHEN(' (13,2)') TAB_TYPENR(TAB_CNT) = 15;                        
       WHEN('    (5)') TAB_TYPENR(TAB_CNT) = 20;                        
       WHEN('  (5,2)') TAB_TYPENR(TAB_CNT) = 27;                        
       WHEN('    (7)') TAB_TYPENR(TAB_CNT) = 28;                        
       WHEN(' (13,7)') TAB_TYPENR(TAB_CNT) = 30;                        
       OTHERWISE ;                                                      
     END;                                                               
   END;                                                                 
                                                                        
   OTHERWISE ;                                                          
 END;                                                                   
                                                                        
 END DAN_TAB_TYPENR;                                                    
                                                                        
 /********************************************************************/ 
 /* TAB_FELT værdier, som der findes flere af, indsættes i tabellen  */ 
 /* ARRAY_FELTER                                                     */ 
 /********************************************************************/ 
 UDFYLD_ARRAY: PROC;                                                    
                                                                        
 FELT_NOTFND = JA;                                                      
                                                                        
 IF ARRAY_IX > 0 THEN DO;                                               
    IX = 0;                                                             
    DO WHILE(IX < ARRAY_IX);                                            
       IX = IX + 1;                                                     
                                                                        
       IF ARRAY_FELT(IX) = TAB_FELT(TAB_CNT) THEN DO;                   
          FELT_NOTFND   = NEJ;                                          
          ARRAY_CNT(IX) = ARRAY_CNT(IX) + 1;                            
                                                                        
          PUT SKIP LIST('ARR' !! BEH_INDV !! '(' !! IX !! '): '         
                        !! ARRAY_FELT(IX) !! ' '                        
                        !! ARRAY_CNT(IX)  !! ' '                        
                        !! ARRAY_NR(IX)         );                      
                                                                        
                                                                        
          /* Maksantal*/                                                
          IF ARRAY_CNT(IX) > 11 THEN DO;                                
             ABEND_FEJLNR = '102';                                      
             ABEND_TXT    = 'For mange ' !! ARRAY_FELT(IX);             
             CALL PROGRAM_FEJL;                                         
          END;                                                          
                                                                        
          IX = ARRAY_IX;                                                
       END;                                                             
    END;                                                                
 END;                                                                   
                                                                        
 IF FELT_NOTFND THEN DO;                                                
    ARRAY_IX             = ARRAY_IX + 1;                                
    ARRAY_FELT(ARRAY_IX) = TAB_FELT(TAB_CNT);                           
    ARRAY_CNT(ARRAY_IX)  = ARRAY_CNT(ARRAY_IX) + 1;                     
                                                                        
    PUT SKIP LIST('ARR' !! BEH_INDV !! '(' !! ARRAY_IX !! '): '         
                  !! ARRAY_FELT(ARRAY_IX) !! ' '                        
                  !! ARRAY_CNT(ARRAY_IX)  !! ' '                        
                  !! ARRAY_NR(ARRAY_IX)         );                      
 END;                                                                   
                                                                        
 END UDFYLD_ARRAY;                                                      
                                                                        
 /********************************************************************/ 
 /* Udfyld IND_REC, POS_REC og XLS_REC med værdier fra TAB_FELTER    */ 
 /********************************************************************/ 
 DAN_OUTPUT: PROC;                                                      
                                                                        
 IF ARRAY_IX > 1 THEN DO;                                               
    CALL DAN_TAB_FELT;                                                  
 END;                                                                   
                                                                        
 IND_FELT     = TAB_FELT(IX);                                           
 IND_TYPE     = TAB_TYPE(IX);                                           
 IND_LGT      = TAB_LGTTYPE(IX);                                        
 IND_KOMM     = TAB_KOMM(IX);                                           
                                                                        
 POS_FELTNR   = TAB_FELTNR(IX);                                         
 POS_START    = TAB_START(IX);                                          
 POS_LGT      = TAB_LGT(IX);                                            
 POS_TYPENR   = TAB_TYPENR(IX);                                         
 POS_FELT     = TAB_FELT(IX);                                           
                                                                        
 SELECT(IX);                                                            
    WHEN(1)   POS_LEFT = '(';                                           
    OTHERWISE POS_LEFT = ' ';                                           
 END;                                                                   
                                                                        
 SELECT;                                                                
    WHEN(IX = TAB_CNT)   POS_RIGHT = ');';                              
    OTHERWISE            POS_RIGHT = ', ';                              
 END;                                                                   
                                                                        
 IF IX > 1 THEN DO;                                                     
    CALL DAN_BIT_FELT;                                                  
    BIT_KOMM = TAB_KOMM(IX);                                            
 END;                                                                   
                                                                        
                                                                        
 PUT SKIP LIST('IND' !! BEH_INDV !! '(' !! IX !! '): '                  
               !! IND_FELT !! ' '                                       
               !! IND_TYPE !! ' '                                       
               !! IND_LGT  !! ' '                                       
               !! IND_KOMM       );                                     
                                                                        
 PUT SKIP LIST('POS' !! BEH_INDV !! '(' !! IX !! '): '                  
               !! POS_LEFT   !! ' '                                     
               !! POS_FELTNR !! ' '                                     
               !! POS_START  !! ' '                                     
               !! POS_LGT    !! ' '                                     
               !! POS_TYPENR !! ' '                                     
               !! POS_RIGHT  !! ' '                                     
               !! POS_FELT         );                                   
                                                                        
 IF IX > 1 THEN DO;                                                     
    PUT SKIP LIST('BIT' !! BEH_INDV !! '(' !! IX !! '): '               
                  !! BIT_FELT !! ' '                                    
                  !! BIT_KOMM       );                                  
 END;                                                                   
                                                                        
                                                                        
 END DAN_OUTPUT;                                                        
                                                                        
 /********************************************************************/ 
 /* Findes der flere med samme TAB_FELT navn i TAB_FELTER,           */ 
 /* så tilføjes et fortløbende nummer til TAB_FELT navnet.           */ 
 /*                                                                  */ 
 /* Hvis antallet af ens TAB_FELT = 10, så tilføjes:                 */ 
 /*    0, 1, 2, 3, 4, 5, 6, 7, 8, 9 i nævnte rækkefølge              */ 
 /* ellers tilføjes:                                                 */ 
 /*    ' ', 1, 2, 3, 4, 5, 6, 7, 8 i nævnte rækkefølge               */ 
 /********************************************************************/ 
 DAN_TAB_FELT: PROC;                                                    
                                                                        
 DCL ARRAY_NR_KORT     PIC'(1)9';                                       
 DCL ARRAY_NR_LANG     PIC'(2)9';                                       
                                                                        
 IY = 0;                                                                
 DO WHILE(IY < ARRAY_IX);                                               
   IY = IY + 1;                                                         
                                                                        
   IF ARRAY_FELT(IY) = TAB_FELT(IX) THEN DO;                            
                                                                        
     IZ = 0;                                                            
     DO WHILE(IZ < 19);                                                 
       IZ = IZ + 1;                                                     
                                                                        
       IF SUBSTR(TAB_FELT(IX),IZ,1) = '' THEN DO;                       
        /* IF  ARRAY_NR(IY) < 10 THEN ARRAY_NR_KORT = ARRAY_NR(IY);*/   
                                                                        
         SELECT(ARRAY_CNT(IY));                                         
           WHEN(1)  ;                                                   
                                                                        
           WHEN(10) DO;   // fejlnummer gruppen starter med nummer 1    
                                                                        
                      IF  ARRAY_NR(IY) < 9 THEN DO;                     
                          ARRAY_NR_KORT = ARRAY_NR(IY) + 1;             
                          SUBSTR(TAB_FELT(IX),IZ,1) = ARRAY_NR_KORT;    
                          END;                                          
                      ELSE DO;                                          
                          ARRAY_NR_LANG = ARRAY_NR(IY) + 1;             
                          SUBSTR(TAB_FELT(IX),IZ,2) = ARRAY_NR_LANG;    
                          END;                                          
                    END;                                                
                                                                        
           WHEN(11) DO;   // KILDEPROCEKOD første uden nummer           
                      IF ARRAY_NR(IY) = 0 THEN;                         
                      ELSE                                              
                          IF  ARRAY_NR(IY) < 10 THEN DO;                
                              ARRAY_NR_KORT = ARRAY_NR(IY);             
                              SUBSTR(TAB_FELT(IX),IZ,1)                 
                                = ARRAY_NR_KORT;                        
                              END;                                      
                          ELSE                                          
                              SUBSTR(TAB_FELT(IX),IZ,2) = ARRAY_NR(IY); 
                    END;                                                
                                                                        
                                                                        
           /*SUBSTR(TAB_FELT(IX),IZ,1) = ARRAY_NR(IY);*/                
                                                                        
           OTHERWISE DO;                                                
             SELECT(ARRAY_NR(IY));                                      
               WHEN(0)   SUBSTR(TAB_FELT(IX),IZ,1) = ' ';               
               OTHERWISE SUBSTR(TAB_FELT(IX),IZ,1) = ARRAY_NR_KORT;     
             END;                                                       
           END;                                                         
         END;                                                           
                                                                        
         ARRAY_NR(IY) = ARRAY_NR(IY) + 1;                               
         IZ           = 19;                                             
       END;                                                             
     END;                                                               
   END;                                                                 
 END;                                                                   
                                                                        
 END DAN_TAB_FELT;                                                      
                                                                        
 /********************************************************************/ 
 /* BIT_FELT dannes udfra værdien i TAB_FELT + '_B'                  */ 
 /********************************************************************/ 
 DAN_BIT_FELT: PROC;                                                    
                                                                        
 BIT_FELT              = '';                                            
 SUBSTR(BIT_FELT,1,19) = TAB_FELT(IX);                                  
                                                                        
 IY = 0;                                                                
                                                                        
 DO WHILE(IY < 21);                                                     
   IY = IY + 1;                                                         
                                                                        
   IF SUBSTR(BIT_FELT,IY,1) = '' THEN DO;                               
      SUBSTR(BIT_FELT,IY,2)     = '_B';                                 
      IY = 21;                                                          
   END;                                                                 
 END;                                                                   
                                                                        
 END DAN_BIT_FELT;                                                      
                                                                        
                                                                        
 /********************************************************************/ 
 /* Luk filer og put skip tællere                                    */ 
 /********************************************************************/ 
 AFSLUT: PROC;                                                          
                                                                        
 CLOSE FILE(INP132),                                                    
       FILE(INP135),                                                    
       FILE(PARM),                                                      
       FILE(IND132),                                                    
       FILE(IND135),                                                    
       FILE(POS132),                                                    
       FILE(POS135),                                                    
       FILE(BIT132),                                                    
       FILE(BIT135);                                                    
                                                                        
                                                                        
 DISP_CNT_1 = INP132_READ;                                              
 DISP_CNT_2 = IND132_WRITE;                                             
 DISP_CNT_3 = POS132_WRITE;                                             
 DISP_CNT_4 = BIT132_WRITE;                                             
                                                                        
                                                                        
 PUT SKIP LIST('');                                                     
 PUT SKIP LIST('Read  INP132:' !! DISP_CNT_1);                          
 PUT SKIP LIST('Write IND132:' !! DISP_CNT_2);                          
 PUT SKIP LIST('Write POS132:' !! DISP_CNT_3);                          
 PUT SKIP LIST('Write BIT132:' !! DISP_CNT_4);                          
                                                                        
                                                                        
 DISP_CNT_1 = INP135_READ;                                              
 DISP_CNT_2 = IND135_WRITE;                                             
 DISP_CNT_3 = POS135_WRITE;                                             
 DISP_CNT_4 = BIT135_WRITE;                                             
                                                                        
 PUT SKIP LIST('');                                                     
 PUT SKIP LIST('Read  INP135:' !! DISP_CNT_1);                          
 PUT SKIP LIST('Write IND135:' !! DISP_CNT_2);                          
 PUT SKIP LIST('Write POS135:' !! DISP_CNT_3);                          
 PUT SKIP LIST('Write BIT135:' !! DISP_CNT_4);                          
                                                                        
 PUT SKIP LIST('');                                                     
 PUT SKIP LIST('Program BH98100 sluttet');                              
                                                                        
 END AFSLUT;                                                            
                                                                        
 /********************************************************************/ 
 /* Program fejl (dump)                                              */ 
 /********************************************************************/ 
 PROGRAM_FEJL: PROC;                                                    
                                                                        
 PUT SKIP LIST ('*****************************************');           
 PUT SKIP LIST ('Der abendes med programfejl');                         
 PUT SKIP LIST ('ABEND_TXT:                 ' !! ABEND_TXT);            
 PUT SKIP LIST ('*****************************************');           
 CALL ZS30101(5,ABEND_MEDDEL,2);                                        
                                                                        
 END PROGRAM_FEJL;                                                      
                                                                        
 END BH98100;                                                           
