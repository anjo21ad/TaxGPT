  PROCESS OPT(TIME);                                                    
 BH66800: /* OVERFØR STATUS FOR 1/7-98-DATO TIL ENKER/KØBERE M.V. */    
         PROC OPTIONS (MAIN) REORDER;                                   
         DCL COPYRIGHT CHAR (30) STATIC                                 
         INIT ('COPYRIGHT KOMMUNEDATA I/S 2001');                       
                                                                        
 /*********************************************************************/
 /* OBS.: DETTE PROGRAM SKAL KUN ÆNDRES HVIS STRUKTUR BH66600N ÆNDRES */
 /*       ELLER HVIS DER ER NYE REGLER FOR OVERFØRSEL AF STATUS       */
 /*********************************************************************/
                                                                        
 /*********************************************************************/
 /* FORMÅL: EFTER OPSÆTNINGEN AF STATUS FOR 1/7-98 EJERSKAB I PROGRAM */
 /*         BH66600 P.G.A. BEREGNINGSBÅND FRA AKTUEL KØRSEL D.V.S.    */
 /*         EVS SLUT 'HOVEDLEVERING' ELLER EVS FORSKUD 'OPRETTELSE'   */
 /*         FORETAGER PROGRAMMET EVENTUELT OVERFØRSEL AF 'GAMMEL      */
 /*         STATUS' VED TILKØB/FRASALG, 'ENKE EFTER' ELLER SKILSMISSE */
 /*         SITUATIONER MELLEM NUVÆRENDE OG/ELLER TIDLIGERE ÆGTEFÆL-  */
 /*         LER A.H.T. BEREGNING AF NY EJENDOMSVÆRDISKAT. OVERFØRSEL  */
 /*         AF STATUS SKER FRA 1/7-98-STATUS-BÅNDET FRA GL. SLUTÅR'S  */
 /*         SUPPLEMENTSKØRSEL.                                        */
 /*         DER BEVARES MINIMUM ET INDIVID PR. PERSON INDEHOLDENDE    */
 /*         DEN 'ÆLDSTE' 1/7-DATO BL. A. TIL BRUG VED OPSÆTNINGEN AF  */
 /*         EVT. HELÅRSSTATUS FOR SOMMERHUSBEBOERE (8 ÅRS EJERSKAB?)  */
 /*         SAMT NÆSTE ÅRS OPSÆTNING/OVERFØRSEL AF STATUS.            */
 /*                                                                   */
 /* INDDATA      B.H66700D SORTERET UDTRÆK                            */
 /*                                                                   */
 /* UDDATA       B.H66800D                                            */
 /*              B.H66801Y KØRSELSKONTROLLISTE                        */
 /*                                                                   */
 /* PROGRAMMØR   AAGE RASMUSSEN          PUS T&S     JUNI 2000        */
 /*                                                                   */
 /* RETTET       AAGE RASMUSSEN          PUS T&S     NOV  2000        */
 /* RETTET       AAGE RASMUSSEN          LSU T&S     AUG  2001        */
 /*********************************************************************/
         DEFAULT RANGE (*) STATIC UNALIGNED CONN;                       
 /*********************************************************************/
 /*      FILE-DECLARE                                                 */
 /*********************************************************************/
 DCL     BH667I          FILE RECORD INPUT;                             
 DCL     BH668O          FILE RECORD OUTPUT;                            
 /*********************************************************************/
 /*      ENTRY-DECLARE                                                */
 /*********************************************************************/
 DCL     ZS61900         ENTRY OPTIONS (INTER ASM);   /* SSI-DATO     */
 DCL     ZS38100         ENTRY OPTIONS (INTER ASM);   /* TIMESTAMP    */
 /*********************************************************************/
 /*      STRUCTUR-DECLARE  INPUT/OUTPUT                               */
 /*********************************************************************/
 DCL     BH667_AR        CHAR      (300) VAR;                           
 DCL     1 BH667         BASED(ADDR(BH667_AR)),                         
           3 LÆNGDE      BIN FIXED (15),                                
           %INCLUDE BH66600N;;                                          
 DCL     1 BH66799,                                                     
           %INCLUDE BH66699N;                                           
 /*********************************************************************/
 /*      DECLARE AF PRINTLINIER                                       */
 /*********************************************************************/
 DCL     1 LIN1,                                                        
          2 CTL          CHAR      (1),                                 
          2 TX1          CHAR      (47)      INIT                       
                         ('PROGRAM: BH66800L'),                         
          2 TX2          CHAR      (59)      INIT                       
            ('OVERFØR 1/7-98-STATUS VED TILKØB/ENKE M.V. SITUATIONER'), 
          2 TX3          CHAR      (14)      INIT                       
                         ('UDSKREVET DEN '),                            
          2 DATO         CHAR      (10),                                
          2 REST         CHAR      (02)      INIT      (' ');           
 DCL     1 LIN2,                                                        
          2 CTL          CHAR      (1),                                 
          2 F1           CHAR      (54)      INIT      ('  '),          
          2 TX1          CHAR      (20)      INIT                       
                         ('KØRSELSKONTROLLISTE'),                       
          2 REST         CHAR      (58)      INIT      (' ');           
 DCL     1 LIN3,                                                        
          2 CTL          CHAR      (1),                                 
          2 F1           CHAR      (2)       INIT      (' '),           
          2 TEKST        CHAR      (52),                                
          2 ANT          PIC       'ZZZ.ZZZ.ZZZ.ZZZ.ZZZ',               
          2 REST         CHAR      (59)      INIT      (' ');           
 DCL     1 LIN_BLANK,                                                   
          2 CTL          CHAR      (1),                                 
          2 F1           CHAR      (132)     INIT      (' ');           
         %INCLUDE ZZ20301M;                                             
 /*********************************************************************/
 /*      DECLARE AF TÆLLEVÆRKER                                       */
 /*********************************************************************/
 DCL     TV_LÆS          FIXED     (7)       INIT      (0);             
 DCL     TV_KOM          FIXED     (7)       INIT      (0);             
 DCL     TV_SKRIV        FIXED     (7)       INIT      (0);             
 DCL     TV_SLETÅR       FIXED     (7)       INIT      (0);             
 DCL     TV_CNED15       FIXED     (7)       INIT      (0);             
 DCL     TV_CNED16       FIXED     (7)       INIT      (0);             
 DCL     TV_CNED17       FIXED     (7)       INIT      (0);             
 DCL     FDIFU31         FIXED     (7)       INIT      (0);             
 DCL     FDIFO30         FIXED     (7)       INIT      (0);             
 DCL     TOTLÆS (6)      FIXED (7);                                     
 DCL     TOTSKR (6)      FIXED (7);                                     
 DCL     TOTTXT (6)      CHAR (28) INIT                                 
                                   (' 1 = GL. ÅR DUBLET          ',     
                                    ' 2 = GL. ÅR                 ',     
                                    ' 3 = DØD ELL. SÆLGER DUBLET ',     
                                    ' 4 = DØD ELL. SÆLGER        ',     
                                    ' 5 = ØVRIGE DUBLET          ',     
                                    ' 6 = ØVRIGE                 ');    
 /*********************************************************************/
 /*      DECLARE AF BUILTIN                                           */
 /*********************************************************************/
 DCL     ADDR            BUILTIN;                                       
 DCL     SUBSTR          BUILTIN;                                       
 DCL     PLIDUMP         BUILTIN;                                       
 /*********************************************************************/
 /*      DECLARE AF DIVERSE FELTER                                    */
 /*********************************************************************/
 DCL     GEMAR           CHAR      (300) VAR;                           
 DCL     1 GEM           BASED(ADDR(GEMAR)),                            
           3 LÆNGDE      BIN FIXED (15),                                
           %INCLUDE BH66600N;;                                          
                                                                        
 DCL     I               BIN FIXED (15);                                
                                                                        
 DCL     UDDATO          CHAR      (10);                                
                                                                        
 DCL     DATO1           CHAR      (26);                                
                                                                        
 DCL     1 DATO2                              BASED(ADDR(DATO1)),       
           2 ÅR          CHAR      (04),                                
           2 F1          CHAR      (01),                                
           2 MD          CHAR      (02),                                
           2 F2          CHAR      (01),                                
           2 DG          CHAR      (02);                                
                                                                        
 DCL     EOF             PIC       '9'       INIT (0);                  
                                                                        
 DCL     FRADATO         PIC       '(8)9';                              
 DCL     1 FRA           BASED(ADDR(FRADATO)),                          
         2 AAR           PIC       '9999',                              
         2 MD            PIC       '99',                                
         2 DG            PIC       '99';                                
                                                                        
 DCL     TILDATO         PIC       '(8)9';                              
 DCL     1 TIL           BASED(ADDR(TILDATO)),                          
         2 AAR           PIC       '9999',                              
         2 MD            PIC       '99',                                
         2 DG            PIC       '99';                                
                                                                        
 DCL     1 BH65300M,                                                    
         %INCLUDE BH65300M;                                             
 /*********************************************************************/
 /*      HOUSE-KEEPING                                                */
 /*********************************************************************/
         ON ERROR CALL PLIDUMP('SNHOB');                                
         CALL ZS61900;                 /*   UDSKRIVNING AF SSI-DATO   */
         LIN_BLANK.CTL = ZZIK1;                                         
         LIN1.CTL = ZZWS2;                                              
         LIN2.CTL = ZZWS3;                                              
         LIN3.CTL = ZZWS2;                                              
         OPEN FILE (BH667I)  TITLE ('BH66700I');                        
         OPEN FILE (BH668O)  TITLE ('BH66800O');                        
         CALL ZZ20390 ('*OPEN','BH66801Y');                             
         ON ENDFILE (BH667I)                                            
         BEGIN;                                                         
            EOF = 1;                                                    
         END;                                                           
         CALL ZS38100(DATO1);                                           
         UDDATO = DATO2.DG !! '/' !! DATO2.MD !!                        
                  '-' !! DATO2.ÅR;                                      
         LIN1.DATO = UDDATO;                                            
         DO I = 1 TO 6;                                                 
            TOTLÆS(I) = 0;                                              
            TOTSKR(I) = 0;                                              
         END;                                                           
 /*********************************************************************/
 /*      PROCES                                                       */
 /*********************************************************************/
                                                                        
         READ FILE (BH667I) INTO (BH667_AR);                            
         GEMAR = BH667_AR;                                              
         I = BH667.SORTTYPE;                                            
         TOTLÆS(I) = TOTLÆS(I) + 1;                                     
         READ FILE (BH667I) INTO (BH667_AR);                            
         TV_LÆS = 2;                                                    
                                                                        
         DO WHILE (EOF = 0 & BH667.EKOMNR < 999);                       
            I = BH667.SORTTYPE;                                         
            TOTLÆS(I) = TOTLÆS(I) + 1;                                  
            CALL BEHANDL;                                               
            READ FILE (BH667I) INTO (BH667_AR);                         
            IF BH667.EKOMNR < 999 /* OPTÆLL.INDIVID */                  
            THEN                                                        
               TV_LÆS = TV_LÆS + 1;                                     
         END;                                                           
                                                                        
         IF BH667.EKOMNR = 999 /* OPTÆLL.INDIVID */                     
         THEN                                                           
            TV_KOM = TV_KOM + 1;                                        
                                                                        
 /*********************************************************************/
 /*    AFSLUT PROGRAM                                                 */
 /*********************************************************************/
                                                                        
         CALL SKRIV_PERSON;          /* SIDSTE PERSON BEHANDLES FÆRDIG*/
                                                                        
         CALL DAN_OPT_INDV;                                             
                                                                        
         CALL SKRIV_TOTALER;                                            
                                                                        
         CALL ZZ20300(LIN_BLANK,'99');                                  
                                                                        
         CLOSE FILE (BH667I),                                           
               FILE (BH668O);                                           
                                                                        
 /*********************************************************************/
 /*    UNDERSØG OM DER EVT. SKAL SKE OVERFØRSEL AF STATUS             */
 /*********************************************************************/
 BEHANDL:                                                               
 PROC;                                                                  
                                                                        
         IF GEM.EKOMNR  = BH667.EKOMNR &                                
            GEM.EEJDNR  = BH667.EEJDNR &                                
            GEM.SORTCPR = BH667.SORTCPR                                 
         THEN                                                           
            DO;                                                         
               CALL BEHANDL_SAMME;                                      
               RETURN;                                                  
            END;                                                        
         ELSE                                                           
            CALL SKRIV_PERSON;                                          
                                                                        
         GEMAR = BH667_AR;                                              
                                                                        
 /*********************************************************************/
 /*    OVERFØR STATUS VEDR. 1/7-98 EJERSKAB I DIVERSE SITUATIONER     */
 /*    SAMT GEM NYESTE STATUS VEDR. HELÅRSSOMMERHUSE                  */
 /*********************************************************************/
 BEHANDL_SAMME:                                                         
 PROC;                                                                  
                                                                        
         IF (BH667.EJER_NU.DATO0107 > GEM.EJER_NU.DATO0107) &           
             GEM.EJER_NU.CNEDSL1 < '50'                                 
         THEN                                                           
            BH667.EJER_NU.DATO0107 = GEM.EJER_NU.DATO0107;              
                                                                        
         IF BH667.CÆGTEJET = 0 &                                        
            GEM.CÆGTEJET = 1                                            
         THEN                                                           
            BH667.CÆGTEJET = 1;  /* EJENDOMMEN VAR OGSÅ EJET AF PER-  */
                                 /* SONEN OG/ELLER NUVÆRENDE/TIDLIGE- */
                                 /* RE ÆGTEFÆLLE FØR ELLER PÅ DEN     */
                                 /* SENESTE CIVILSTANDSÆNDRINGSDATO   */
                                                                        
         IF BH667.EJER_NU.CNEDSL1 < '30' & GEM.EJER_NU.CNEDSL1 < '30'   
         THEN                                                           
            DO;                                                         
               GEMAR = BH667_AR;                                        
               RETURN;                                                  
            END;                                                        
                                                                        
         IF (BH667.EJER_NU.CNEDSL1 > '29' &                             
             BH667.EJER_NU.CNEDSL1 < '50') &                            
            (GEM.EJER_NU.CNEDSL1 > '29' & GEM.EJER_NU.CNEDSL1 < '50')   
         THEN                                                           
            DO;                                                         
               GEMAR = BH667_AR;                                        
               RETURN;                                                  
            END;                                                        
                                                                        
         IF (BH667.EJER_NU.CNEDSL1 > '29' &                             
             BH667.EJER_NU.CNEDSL1 < '50') &                            
            GEM.EJER_NU.CNEDSL1 = '50'                                  
         THEN                                                           
            DO;                                                         
               BH667.EJER_NU.CNEDSL1GL = GEM.EJER_NU.CNEDSL1;           
               GEMAR = BH667_AR;                                        
               RETURN;                                                  
            END;                                                        
                                                                        
         IF (GEM.EJER_NU.CNEDSL1 > '29' & GEM.EJER_NU.CNEDSL1 < '50') & 
            BH667.EJER_NU.CNEDSL1 = '50'                                
         THEN                                                           
            DO;                                                         
               BH667.EJER_FØR = GEM.EJER_NU, BY NAME;                   
               BH667.EJER_NU.CNEDSL1GL = BH667.EJER_NU.CNEDSL1;         
               BH667.EJER_NU.CNEDSL1 = GEM.EJER_NU.CNEDSL1;             
               GEMAR = BH667_AR;                                        
               RETURN;                                                  
            END;                                                        
                                                                        
         IF (BH667.EJER_NU.CNEDSL1 < '30' & GEM.EJER_NU.CNEDSL1 = '50') 
         THEN                                                           
            DO;                                                         
               BH667.EJER_FØR = GEM.EJER_NU, BY NAME;                   
               IF BH667.EJER_NU.BBROPFØRT < '0001' !                    
                  BH667.EJER_NU.BBROPFØRT > '1997'                      
               THEN                                                     
                  DO;                                                   
                     BH667.EJER_NU.CNEDSL1GL = BH667.EJER_NU.CNEDSL1;   
                     BH667.EJER_NU.CNEDSL1 = GEM.EJER_NU.CNEDSL1;       
                  END;                                                  
               GEMAR = BH667_AR;                                        
               RETURN;                                                  
            END;                                                        
                                                                        
         BH667.EJER_NU.CNEDSL1GL = BH667.EJER_NU.CNEDSL1;               
                                                                        
         IF GEM.DCPRCIR = BH667.DCPRCIR                                 
         THEN                                                           
            DO;                                                         
               /* TILKØB/TILBAGEKØB */                                  
               IF BH667.EJER_NU.CNEDSL1 > '29' &                        
                  GEM.EJER_NU.CNEDSL1 < '30'                            
               THEN                                                     
                  DO;                                                   
                     BH667.EJER_FØR = GEM.EJER_NU, BY NAME;             
                     IF BH667.EJER_NU.CNEDSL1 = '50'                    
                     THEN                                               
                        BH667.EJER_NU.DATO0107 = GEM.EJER_NU.DATO0107;  
                     BH667.EJER_NU.CNEDSL1 = '15';                      
                     CALL BEREGN_DIFF_DAGE;                             
                  END;                                                  
            END;                                                        
         ELSE                                                           
            DO;                                                         
             IF (BH667.EJER_NU.CNEDSL1 > '29' &                         
                 GEM.EJER_NU.CNEDSL1 < '30')                            
             THEN                                                       
                DO;                                                     
                   BH667.EJER_FØR = GEM.EJER_NU, BY NAME;               
                   /* ENKE EFTER  E L L E R            */               
                   /* SKILSMISSE/ÆGTEFÆLLEOVERDRAGELSE */               
                   IF BH667.EJER_NU.CNEDSL1 = '50'                      
                   THEN                                                 
                      BH667.EJER_NU.DATO0107 = GEM.EJER_NU.DATO0107;    
                   IF BH667.EJER_NU.CCIVS = 'G' !                       
                      BH667.EJER_NU.CCIVS = 'P' !                       
                      BH667.EJER_NU.CCIVS = 'F' !                       
                      BH667.EJER_NU.CCIVS = 'S' !                       
                      BH667.EJER_NU.CCIVS = 'O'                         
                   THEN                                                 
                      GEM.EJER_NU.CNEDSL1 = '17';                       
                   ELSE                                                 
                      GEM.EJER_NU.CNEDSL1 = '16';                       
                   IF BH667.EJER_FØR.DAFSTÅ > 0 &                       
                     (BH667.EJER_NU.DANNETÅR >=                         
                      BH667.EJER_FØR.DANNETÅR) &                        
                     (GEM.EJER_NU.CNEDSL1 = '16' !                      
                      GEM.EJER_NU.CNEDSL1 = '17')                       
                   THEN                                                 
                      CALL BEREGN_DIFF_DAGE;                            
                   BH667.EJER_NU.CNEDSL1 = GEM.EJER_NU.CNEDSL1;         
                END;                                                    
            END;                                                        
                                                                        
         GEMAR = BH667_AR;                                              
                                                                        
 /*********************************************************************/
 /*      BEREGN ANTAL DAGE IMELLEM SÆLGERS AFSTÅELSESDATO OG          */
 /*      KØBERS 1/7-98-DATO.                                          */
 /*      MÅNEDER BEREGNES SOM VÆRENDE PÅ 30 DAGE                      */
 /*      D.V.S. ET  H E L T  ÅR ER PÅ 360 DAGE                        */
 /*********************************************************************/
 BEREGN_DIFF_DAGE:                                                      
 PROC;                                                                  
                                                                        
         IF BH667.EJER_NU.DATO0107 <= BH667.EJER_FØR.DAFSTÅ             
         THEN                                                           
            RETURN;                                                     
                                                                        
         FRADATO = BH667.EJER_FØR.DAFSTÅ;                               
                                                                        
         TILDATO = BH667.EJER_NU.DATO0107;                              
                                                                        
         BH667.EJER_NU.FDIFDAGE = (((TIL.MD - 1) * 30) + TIL.DG) -      
                        (((FRA.MD - 1) * 30) + FRA.DG);                 
                                                                        
         IF BH667.EJER_NU.FDIFDAGE = 0                                  
         THEN                                                           
            BH667.EJER_NU.FDIFDAGE = 1; /* SALG OG KØB SAMME DATO */    
                                                                        
         IF BH667.EJER_NU.FDIFDAGE > 1 &                                
            BH667.EJER_NU.FDIFDAGE < 31                                 
         THEN                                                           
            FDIFU31 = FDIFU31 + 1;                                      
                                                                        
         IF BH667.EJER_NU.FDIFDAGE > 30                                 
         THEN                                                           
            FDIFO30 = FDIFO30 + 1;                                      
                                                                        
 END BEREGN_DIFF_DAGE;                                                  
                                                                        
 END BEHANDL_SAMME;                                                     
                                                                        
                                                                        
 END BEHANDL;                                                           
                                                                        
 /*********************************************************************/
 /*    SKRIV DET SIDSTE INDIVID PR. PERSON MED PERSONENS              */
 /*    STATUS VEDR. 1/7-DATO M.V.                                     */
 /*********************************************************************/
 SKRIV_PERSON:                                                          
 PROC;                                                                  
                                                                        
         IF (SLUTÅR - GEM.EJER_NU.DANNETÅR) >= 2                        
         THEN                                                           
            DO;                                                         
               TV_SLETÅR = TV_SLETÅR + 1;                               
               RETURN;                                                  
            END;                                                        
                                                                        
         IF GEM.SORTTYPE < 3                                            
         THEN;                                                          
         ELSE                                                           
            IF GEM.SORTTYPE = 3                                         
            THEN                                                        
               GEM.SORTTYPE = 1;                                        
            ELSE                                                        
               GEM.SORTTYPE = 2;                                        
                                                                        
         IF GEM.EJER_NU.CNEDSL1 = '15'                                  
         THEN                                                           
            TV_CNED15 = TV_CNED15 + 1;                                  
                                                                        
         IF GEM.EJER_NU.CNEDSL1 = '16'                                  
         THEN                                                           
            TV_CNED16 = TV_CNED16 + 1;                                  
                                                                        
         IF GEM.EJER_NU.CNEDSL1 = '17'                                  
         THEN                                                           
            TV_CNED17 = TV_CNED17 + 1;                                  
                                                                        
         WRITE FILE (BH668O) FROM (GEMAR);                              
         TV_SKRIV = TV_SKRIV + 1;                                       
                                                                        
         I = GEM.SORTTYPE;                                              
         TOTSKR(I) = TOTSKR(I) + 1;                                     
                                                                        
 END SKRIV_PERSON;                                                      
                                                                        
 /*********************************************************************/
 /*      DER DANNES ET SLUTINDIVID TIL BRUG FOR MASKINEL AFSTEMNING   */
 /*********************************************************************/
 DAN_OPT_INDV:                                                          
 PROC;                                                                  
                                                                        
         BH66799.EKOMNR   = 999;                                        
         BH66799.EEJDNR   = 9999999;                                    
         BH66799.SORTCPR  = 99999999999;                                
         BH66799.SORTDATO = 999999999;                                  
         BH66799.SORTTYPE = 999;                                        
         BH66799.DCPRCIR  = 99999999999;                                
         BH66799.ANT_INDV = TV_SKRIV;                                   
         WRITE FILE (BH668O) FROM (BH66799);                            
                                                                        
 END DAN_OPT_INDV;                                                      
 /*********************************************************************/
 /*          UDSKRIVNING AF TOTALLISTE                                */
 /*********************************************************************/
 SKRIV_TOTALER:                                                         
 PROC;                                                                  
                                                                        
         CALL ZZ20300(LIN_BLANK,'01');                                  
         CALL ZZ20300(LIN1,'01');                                       
         CALL ZZ20300(LIN2,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST ='LÆSTE INDIVIDER PÅ B.H66700D';                    
         LIN3.ANT = TV_LÆS;                                             
         CALL ZZ20300(LIN3,'01');                                       
         DO I = 1 TO 6;                                                 
            IF TOTLÆS(I) > 0                                            
            THEN                                                        
               DO;                                                      
                  LIN3.CTL = ZZWS2;                                     
                  LIN3.TEKST = '      HERAF ' !! TOTTXT(I);             
                  LIN3.ANT = TOTLÆS(I);                                 
                  CALL ZZ20300(LIN3,'01');                              
               END;                                                     
         END;                                                           
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = 'OVERLÆSTE OPTÆLLINGSINDV.';                      
         LIN3.ANT = TV_KOM;                                             
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = 'ANTAL GENKØBT MED DIFF > 1 OG < 31 DAGE';        
         LIN3.ANT = FDIFU31;                                            
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = 'ANTAL GENKØBT MED DIFF > 30 DAGE       ';        
         LIN3.ANT = FDIFO30;                                            
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = 'ANTAL SLETTEDE ÆLDRE END AKTUELT SLUTÅR - 2';    
         LIN3.ANT = TV_SLETÅR;                                          
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = 'INDIVIDER TIL SKRIVNING EFTER RET SORTTYPE ';    
         LIN3.ANT = TV_SKRIV;                                           
         CALL ZZ20300(LIN3,'01');                                       
         DO I = 1 TO 6;                                                 
            IF TOTSKR(I) > 0                                            
            THEN                                                        
               DO;                                                      
                  LIN3.CTL = ZZWS2;                                     
                  LIN3.TEKST = '      HERAF ' !! TOTTXT(I);             
                  LIN3.ANT = TOTSKR(I);                                 
                  CALL ZZ20300(LIN3,'01');                              
               END;                                                     
         END;                                                           
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = '      HERAF TILKØB/TILBAGEKØB (CNEDSL1=15)     ';
         LIN3.ANT = TV_CNED15;                                          
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = '      HERAF ENKER EFTER       (CNEDSL1=16)     ';
         LIN3.ANT = TV_CNED16;                                          
         CALL ZZ20300(LIN3,'01');                                       
         LIN3.CTL = ZZWS2;                                              
         LIN3.TEKST = '      HERAF FRA ØVRIGE        (CNEDSL1=17)     ';
         LIN3.ANT = TV_CNED17;                                          
         CALL ZZ20300(LIN3,'01');                                       
                                                                        
 END SKRIV_TOTALER;                                                     
                                                                        
                                                                        
 END BH66800;                                                           
